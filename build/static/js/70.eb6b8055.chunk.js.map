{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/SearchNotFound.js","components/LightboxModal.js","components/EmojiPicker.js","utils/getFileFormat.js","components/_dashboard/chat/ChatAccount.js","components/_dashboard/chat/ChatContactSearch.js","components/_dashboard/chat/ChatConversationItem.js","components/_dashboard/chat/ChatConversationList.js","components/_dashboard/chat/ChatHeaderCompose.js","components/_dashboard/chat/ChatHeaderDetail.js","components/_dashboard/chat/ChatMessageInput.js","components/_dashboard/chat/ChatMessageItem.js","components/_dashboard/chat/ChatMessageList.js","components/_dashboard/chat/ChatRoomAttachment.js","components/_dashboard/chat/ChatRoomOneParticipant.js","components/_dashboard/chat/ChatRoomPopup.js","components/_dashboard/chat/ChatRoomGroupParticipant.js","components/_dashboard/chat/ChatRoom.js","components/_dashboard/chat/ChatSearchResults.js","components/_dashboard/chat/ChatSidebar.js","components/_dashboard/chat/ChatWindow.js","pages/dashboard/Chat.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","SearchNotFound","searchQuery","align","useStyles","makeStyles","theme","isRTL","backgroundIcon","iconName","backgroundSize","backgroundPosition","backgroundRepeat","backgroundColor","alpha","palette","grey","backgroundImage","root","backdropFilter","height","padding","width","justifyContent","marginLeft","borderRadius","shape","outline","borderRadiusSm","left","right","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","onClose","classes","useEffect","document","body","style","overflow","toolbarButtons","length","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","wrapperClassName","RootStyle","styled","position","PickerStyle","bottom","boxShadow","customShadows","z20","borderRadiusMd","border","background","paper","color","text","disabled","primary","borderColor","divider","typography","body2","opacity","fill","subtitle2","WebkitBackdropFilter","selected","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useTheme","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","size","onClick","e","preventDefault","icon","smilingFaceFill","ICON_SIZE","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getFileThumb","thumb","format","includes","getFileFormat","src","alt","fileTypeVideo","fileTypeWord","fileTypeExcel","fileTypePowerpoint","fileTypePdf","fileTypePhotoshop2","fileTypeAi2","fileFill","STATUS","ChatAccount","user","useAuth","open","setOpen","status","setStatus","Box","MyAvatar","event","currentTarget","cursor","BadgeStatus","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","py","pr","pl","ml","mr","Typography","displayName","email","Tooltip","IconButton","roundPowerSettingsNew","Divider","List","ListItem","disableGutters","px","ListItemIcon","ListItemText","Select","fullWidth","onChange","bgcolor","borderWidth","option","capitalCase","button","roundAccountBox","primaryTypographyProps","settings2Fill","marginTop","SearchStyle","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","z8","ChatContactSearch","query","onFocus","ClickAwayListener","FormControl","placeholder","startAdornment","InputAdornment","component","Icon","searchFill","AvatarWrapperStyle","ChatConversationItem","isSelected","conversation","onSelectConversation","isOpenSidebar","details","currentUserId","otherParticipants","participants","filter","participant","id","displayNames","reduce","names","name","join","displayText","lastMessage","messages","sender","senderId","message","contentType","getDetails","displayLastActivity","last","createdAt","isGroup","isUnread","unreadCount","isOnlineGroup","item","ListItemAvatar","top","slice","className","Avatar","avatar","secondaryTypographyProps","flexDirection","fontSize","lineHeight","whiteSpace","formatDistanceToNowStrict","Date","addSuffix","ChatConversationList","conversations","activeConversationId","navigate","useNavigate","disablePadding","allIds","conversationId","byId","conversationKey","type","find","username","PATH_DASHBOARD","chat","handleSelectConversation","AutocompleteStyle","minWidth","ChatHeaderCompose","contacts","recipients","onAddRecipient","setQuery","Autocomplete","multiple","disablePortal","popupIcon","clearText","noOptionsText","recipient","onInputChange","options","getOptionLabel","renderOption","props","inputValue","matches","match","parts","parse","checkmarkFill","part","index","highlight","renderTags","getTagProps","label","renderInput","params","TextField","minHeight","OneAvatar","undefined","fToNow","lastActivity","GroupAvatar","AvatarGroup","max","Link","underline","arrowIosForwardFill","ChatHeaderDetail","phoneFill","videoFill","moreVerticalFill","paddingLeft","ChatMessageInput","onSend","fileInputRef","useRef","setMessage","handleAttach","current","click","handleSend","messageId","faker","datatype","uuid","attachments","Input","disableUnderline","onKeyUp","key","keyCode","endAdornment","Stack","roundAddPhotoAlternate","attach2Fill","micFill","orientation","flexItem","mx","roundSend","ref","marginBottom","ContentStyle","maxWidth","neutral","InfoStyle","MessageImgStyle","objectFit","ChatMessageItem","onOpenLightbox","senderDetails","isMe","isImage","firstName","ChatMessageList","scrollRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","scrollTop","scrollHeight","handleOpenLightbox","url","findIndex","Scrollbar","scrollableNodeProps","p","paddingBottom","FileItemStyle","FileThumbStyle","CollapseButtonStyle","Button","overline","AttachmentItem","file","fDateTime","ChatRoomAttachment","isCollapse","onCollapse","totalAttachment","uniq","flatten","endIcon","arrowIosDownwardFill","Collapse","in","RowIconStyle","RowTextStyle","wordWrap","ChatRoomOneParticipant","pt","pb","mt","textAlign","pinFill","address","phone","emailFill","RowStyle","IconStyle","marginRight","ChatRoomPopup","DialogContent","paragraph","Participant","onClosePopup","onShowPopup","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","borderLeft","ToggleButtonStyle","borderRight","borderTopLeftRadius","borderBottomLeftRadius","ChatRoom","isMobile","useMediaQuery","breakpoints","down","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","arrowIosBackFill","participantId","prev","ChatSearchResults","results","onSelectContact","isFound","result","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","useSelector","state","handleChangeSearch","a","axios","get","response","data","console","error","handleSearchSelect","to","new","RouterLink","editFill","ChatWindow","dispatch","useDispatch","pathname","useLocation","useParams","unreadMessages","conversationSelector","mode","displayParticipants","getParticipants","getConversation","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","Chat","getConversations","getContacts","Page","Container","Card"],"mappings":"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","file":"static/js/70.eb6b8055.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Stack sx={sx} mb={5} spacing={2}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Stack>\r\n\r\n      {isString(moreLink) ? (\r\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n          {moreLink}\r\n        </Link>\r\n      ) : (\r\n        moreLink.map((href) => (\r\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\r\n            {href}\r\n          </Link>\r\n        ))\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        No results found for &nbsp;\r\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\n// material\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  const backgroundIcon = (iconName) => ({\r\n    backgroundSize: '24px 24px',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor: alpha(theme.palette.grey[900], 0.8),\r\n    backgroundImage: `url(\"/static/icons/controls/${iconName}.svg\")`\r\n  });\r\n\r\n  return {\r\n    root: {\r\n      backdropFilter: 'blur(8px)',\r\n      backgroundColor: alpha(theme.palette.grey[900], 0.88),\r\n\r\n      // Toolbar\r\n      '& .ril__toolbar': {\r\n        height: 'auto !important',\r\n        padding: theme.spacing(2, 3),\r\n        backgroundColor: 'transparent'\r\n      },\r\n      '& .ril__toolbarLeftSide': { display: 'none' },\r\n      '& .ril__toolbarRightSide': {\r\n        height: 'auto !important',\r\n        padding: 0,\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& li': {\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        },\r\n        '& li:first-child': {\r\n          flexGrow: 1\r\n        },\r\n        '& li:not(:first-child)': {\r\n          width: theme.spacing(5),\r\n          height: theme.spacing(5),\r\n          justifyContent: 'center',\r\n          marginLeft: theme.spacing(1),\r\n          borderRadius: theme.shape.borderRadius\r\n        }\r\n      },\r\n\r\n      // Button\r\n      '& button:focus': { outline: 'none' },\r\n      '& .ril__toolbarRightSide button': {\r\n        width: '100%',\r\n        height: '100%',\r\n        '&.ril__zoomInButton': backgroundIcon('maximize-outline'),\r\n        '&.ril__zoomOutButton': backgroundIcon('minimize-outline'),\r\n        '&.ril__closeButton': backgroundIcon('close')\r\n      },\r\n      '& .ril__navButtons': {\r\n        padding: theme.spacing(3),\r\n        borderRadius: theme.shape.borderRadiusSm,\r\n        '&.ril__navButtonPrev': {\r\n          left: theme.spacing(2),\r\n          right: 'auto',\r\n          ...backgroundIcon(isRTL ? 'arrow-ios-forward' : 'arrow-ios-back')\r\n        },\r\n        '&.ril__navButtonNext': {\r\n          right: theme.spacing(2),\r\n          left: 'auto',\r\n          ...backgroundIcon(isRTL ? 'arrow-ios-back' : 'arrow-ios-forward')\r\n        }\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLightboxModal.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  photoIndex: PropTypes.number,\r\n  setPhotoIndex: PropTypes.func,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, onClose, ...other }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\r\n\r\n  const toolbarButtons = [showIndex];\r\n  const customStyles = {\r\n    overlay: {\r\n      zIndex: 9999\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={images[photoIndex]}\r\n          nextSrc={images[(photoIndex + 1) % images.length]}\r\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={onClose}\r\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\r\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\r\n          toolbarButtons={toolbarButtons}\r\n          reactModalStyle={customStyles}\r\n          wrapperClassName={classes.root}\r\n          {...other}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import 'emoji-mart/css/emoji-mart.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Picker } from 'emoji-mart';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill';\r\n// material\r\nimport { alpha, useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { IconButton, ClickAwayListener } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')({\r\n  position: 'relative'\r\n});\r\n\r\nconst PickerStyle = styled('div')(({ theme }) => ({\r\n  bottom: 40,\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  left: theme.spacing(-2),\r\n  boxShadow: theme.customShadows.z20,\r\n  borderRadius: theme.shape.borderRadiusMd,\r\n  '& .emoji-mart': {\r\n    border: 'none',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  '& .emoji-mart-anchor': {\r\n    color: theme.palette.text.disabled,\r\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\r\n      color: theme.palette.text.primary\r\n    }\r\n  },\r\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\r\n  '& .emoji-mart-search input': {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.grey[500_32],\r\n    '&::placeholder': {\r\n      ...theme.typography.body2,\r\n      color: theme.palette.text.disabled\r\n    }\r\n  },\r\n  '& .emoji-mart-search-icon svg': {\r\n    opacity: 1,\r\n    fill: theme.palette.text.disabled\r\n  },\r\n  '& .emoji-mart-category-label span': {\r\n    ...theme.typography.subtitle2,\r\n    backdropFilter: 'blur(8px)',\r\n    WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\r\n  },\r\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\r\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\r\n    backgroundColor: theme.palette.action.selected\r\n  },\r\n  '& .emoji-mart-emoji': { outline: 'none' },\r\n  '& .emoji-mart-preview-name': {\r\n    color: theme.palette.text.primary\r\n  },\r\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nEmojiPicker.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func,\r\n  alignRight: PropTypes.bool\r\n};\r\n\r\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\r\n  const theme = useTheme();\r\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\r\n\r\n  let emojiPicker;\r\n  if (emojiPickerState) {\r\n    emojiPicker = (\r\n      <Picker\r\n        color={theme.palette.primary.main}\r\n        title=\"Pick your emoji…\"\r\n        emoji=\"point_up\"\r\n        onSelect={(emoji) => setValue(value + emoji.native)}\r\n      />\r\n    );\r\n  }\r\n\r\n  const triggerPicker = (e) => {\r\n    e.preventDefault();\r\n    SetEmojiPicker(!emojiPickerState);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    SetEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <RootStyle {...other}>\r\n        <PickerStyle\r\n          sx={{\r\n            ...(alignRight && {\r\n              right: -2,\r\n              left: 'auto !important'\r\n            })\r\n          }}\r\n        >\r\n          {emojiPicker}\r\n        </PickerStyle>\r\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\r\n          <Icon icon={smilingFaceFill} width={20} height={20} />\r\n        </IconButton>\r\n      </RootStyle>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport fileFill from '@iconify/icons-eva/file-fill';\r\nimport fileTypePdf from '@iconify/icons-vscode-icons/file-type-pdf';\r\nimport fileTypeAi2 from '@iconify/icons-vscode-icons/file-type-ai2';\r\nimport fileTypeWord from '@iconify/icons-vscode-icons/file-type-word';\r\nimport fileTypeExcel from '@iconify/icons-vscode-icons/file-type-excel';\r\nimport fileTypeVideo from '@iconify/icons-vscode-icons/file-type-video';\r\nimport fileTypePowerpoint from '@iconify/icons-vscode-icons/file-type-powerpoint';\r\nimport fileTypePhotoshop2 from '@iconify/icons-vscode-icons/file-type-photoshop2';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = { width: 28, height: 28 };\r\n\r\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\r\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\r\nconst FORMAT_WORD = ['doc', 'docx'];\r\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\r\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\r\nconst FORMAT_PDF = ['pdf'];\r\nconst FORMAT_PHOTOSHOP = ['psd'];\r\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\r\n\r\nexport function getFileType(fileUrl) {\r\n  return fileUrl.split('.').pop();\r\n}\r\n\r\nexport function getFileName(fileUrl) {\r\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\r\n}\r\n\r\nexport function getFileFullName(fileUrl) {\r\n  return fileUrl.split('/').pop();\r\n}\r\n\r\nexport function getFileFormat(fileUrl) {\r\n  let format;\r\n\r\n  switch (fileUrl.includes(getFileType(fileUrl))) {\r\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\r\n      format = 'image';\r\n      break;\r\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\r\n      format = 'video';\r\n      break;\r\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\r\n      format = 'word';\r\n      break;\r\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\r\n      format = 'excel';\r\n      break;\r\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\r\n      format = 'powerpoint';\r\n      break;\r\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\r\n      format = 'pdf';\r\n      break;\r\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\r\n      format = 'photoshop';\r\n      break;\r\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\r\n      format = 'illustrator';\r\n      break;\r\n    default:\r\n      format = getFileType(fileUrl);\r\n  }\r\n\r\n  return format;\r\n}\r\n\r\nexport function getFileThumb(fileUrl) {\r\n  let thumb;\r\n  switch (getFileFormat(fileUrl)) {\r\n    case 'image':\r\n      thumb = <img src={fileUrl} alt={fileUrl} />;\r\n      break;\r\n    case 'video':\r\n      thumb = <Icon icon={fileTypeVideo} {...ICON_SIZE} />;\r\n      break;\r\n    case 'word':\r\n      thumb = <Icon icon={fileTypeWord} {...ICON_SIZE} />;\r\n      break;\r\n    case 'excel':\r\n      thumb = <Icon icon={fileTypeExcel} {...ICON_SIZE} />;\r\n      break;\r\n    case 'powerpoint':\r\n      thumb = <Icon icon={fileTypePowerpoint} {...ICON_SIZE} />;\r\n      break;\r\n    case 'pdf':\r\n      thumb = <Icon icon={fileTypePdf} {...ICON_SIZE} />;\r\n      break;\r\n    case 'photoshop':\r\n      thumb = <Icon icon={fileTypePhotoshop2} {...ICON_SIZE} />;\r\n      break;\r\n    case 'illustrator':\r\n      thumb = <Icon icon={fileTypeAi2} {...ICON_SIZE} />;\r\n      break;\r\n    default:\r\n      thumb = <Icon icon={fileFill} {...ICON_SIZE} />;\r\n  }\r\n  return thumb;\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport { capitalCase } from 'change-case';\r\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\r\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\r\nimport roundPowerSettingsNew from '@iconify/icons-ic/round-power-settings-new';\r\n// material\r\nimport {\r\n  Box,\r\n  List,\r\n  Select,\r\n  Divider,\r\n  Popover,\r\n  Tooltip,\r\n  ListItem,\r\n  Typography,\r\n  IconButton,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from '@material-ui/core';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\n//\r\nimport MyAvatar from '../../MyAvatar';\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STATUS = ['online', 'invisible', 'away'];\r\n\r\nexport default function ChatAccount() {\r\n  const { user } = useAuth();\r\n  const [open, setOpen] = useState(null);\r\n  const [status, setStatus] = useState('online');\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\r\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\r\n      </Box>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            py: 2,\r\n            pr: 1,\r\n            pl: 2.5,\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <MyAvatar />\r\n\r\n          <Box sx={{ ml: 2, mr: 3 }}>\r\n            <Typography noWrap variant=\"subtitle1\">\r\n              {user.displayName}\r\n            </Typography>\r\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              {user.email}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Tooltip title=\"Log out\">\r\n            <IconButton>\r\n              <Icon icon={roundPowerSettingsNew} width={24} height={24} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <List>\r\n          <ListItem disableGutters sx={{ py: 1, px: 2.5 }}>\r\n            <ListItemIcon>\r\n              <Box\r\n                sx={{\r\n                  width: 24,\r\n                  height: 24,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center'\r\n                }}\r\n              >\r\n                <BadgeStatus status={status} />\r\n              </Box>\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              <Select\r\n                native\r\n                fullWidth\r\n                size=\"small\"\r\n                value={status}\r\n                onChange={handleChangeStatus}\r\n                sx={{\r\n                  '& svg': { display: `none` },\r\n                  '& select': {\r\n                    padding: 0,\r\n                    typography: 'body2',\r\n                    '&:focus': { bgcolor: 'transparent' }\r\n                  },\r\n                  '& fieldset': { borderWidth: `0 !important` }\r\n                }}\r\n              >\r\n                {STATUS.map((option) => (\r\n                  <option key={option} value={option}>\r\n                    {capitalCase(option)}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button disableGutters sx={{ py: 1, px: 2.5 }}>\r\n            <ListItemIcon>\r\n              <Icon icon={roundAccountBox} width={24} height={24} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Profile\"\r\n              primaryTypographyProps={{\r\n                variant: 'body2'\r\n              }}\r\n            />\r\n          </ListItem>\r\n\r\n          <ListItem button disableGutters sx={{ py: 1, px: 2.5 }}>\r\n            <ListItemIcon>\r\n              <Icon icon={settings2Fill} width={24} height={24} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Settings\"\r\n              primaryTypographyProps={{\r\n                variant: 'body2'\r\n              }}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, FormControl, OutlinedInput, InputAdornment, ClickAwayListener } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  marginTop: theme.spacing(2)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  transition: theme.transitions.create('box-shadow', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatContactSearch.propTypes = {\r\n  query: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  onClickAway: PropTypes.func\r\n};\r\n\r\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway, ...other }) {\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAway}>\r\n      <RootStyle {...other}>\r\n        <FormControl fullWidth size=\"small\">\r\n          <SearchStyle\r\n            value={query}\r\n            onFocus={onFocus}\r\n            onChange={onChange}\r\n            placeholder=\"Search contacts...\"\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n      </RootStyle>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import { last } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, ListItem, ListItemText, ListItemAvatar } from '@material-ui/core';\r\n//\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst AVATAR_SIZE = 48;\r\nconst AVATAR_SIZE_GROUP = 32;\r\n\r\nconst RootStyle = styled(ListItem)(({ theme }) => ({\r\n  padding: theme.spacing(1.5, 3),\r\n  transition: theme.transitions.create('all')\r\n}));\r\n\r\nconst AvatarWrapperStyle = styled('div')({\r\n  position: 'relative',\r\n  width: AVATAR_SIZE,\r\n  height: AVATAR_SIZE,\r\n  '& .MuiAvatar-img': { borderRadius: '50%' },\r\n  '& .MuiAvatar-root': { width: '100%', height: '100%' }\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst getDetails = (conversation, currentUserId) => {\r\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\r\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\r\n  let displayText = '';\r\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\r\n  if (lastMessage) {\r\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\r\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\r\n    displayText = `${sender}${message}`;\r\n  }\r\n  return { otherParticipants, displayNames, displayText };\r\n};\r\n\r\nChatConversationItem.propTypes = {\r\n  isSelected: PropTypes.bool,\r\n  conversation: PropTypes.object.isRequired,\r\n  isOpenSidebar: PropTypes.bool,\r\n  onSelectConversation: PropTypes.func\r\n};\r\n\r\nexport default function ChatConversationItem({\r\n  isSelected,\r\n  conversation,\r\n  onSelectConversation,\r\n  isOpenSidebar,\r\n  ...other\r\n}) {\r\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\r\n\r\n  const displayLastActivity = last(conversation.messages).createdAt;\r\n  const isGroup = details.otherParticipants.length > 1;\r\n  const isUnread = conversation.unreadCount > 0;\r\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\r\n\r\n  return (\r\n    <RootStyle\r\n      button\r\n      disableGutters\r\n      onClick={onSelectConversation}\r\n      sx={{\r\n        ...(isSelected && { bgcolor: 'action.selected' })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ListItemAvatar>\r\n        <Box\r\n          sx={{\r\n            ...(isGroup && {\r\n              position: 'relative',\r\n              width: AVATAR_SIZE,\r\n              height: AVATAR_SIZE,\r\n              '& .avatarWrapper': {\r\n                position: 'absolute',\r\n                width: AVATAR_SIZE_GROUP,\r\n                height: AVATAR_SIZE_GROUP,\r\n                '&:nth-child(1)': {\r\n                  left: 0,\r\n                  zIndex: 9,\r\n                  bottom: 2,\r\n                  '& .MuiAvatar-root': {\r\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`\r\n                  }\r\n                },\r\n                '&:nth-child(2)': { top: 2, right: 0 }\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          {details.otherParticipants.slice(0, 2).map((participant) => (\r\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\r\n              <Avatar alt={participant.name} src={participant.avatar} />\r\n              {!isGroup && (\r\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\r\n              )}\r\n            </AvatarWrapperStyle>\r\n          ))}\r\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\r\n        </Box>\r\n      </ListItemAvatar>\r\n\r\n      {isOpenSidebar && (\r\n        <>\r\n          <ListItemText\r\n            primary={details.displayNames}\r\n            primaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: 'subtitle2'\r\n            }}\r\n            secondary={details.displayText}\r\n            secondaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: isUnread ? 'subtitle2' : 'body2',\r\n              color: isUnread ? 'textPrimary' : 'textSecondary'\r\n            }}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              ml: 2,\r\n              height: 44,\r\n              display: 'flex',\r\n              alignItems: 'flex-end',\r\n              flexDirection: 'column'\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 1.25,\r\n                fontSize: 12,\r\n                lineHeight: '22px',\r\n                whiteSpace: 'nowrap',\r\n                color: 'text.disabled'\r\n              }}\r\n            >\r\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\r\n                addSuffix: false\r\n              })}\r\n            </Box>\r\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\n// material\r\nimport { List } from '@material-ui/core';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport ChatConversationItem from './ChatConversationItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatConversationList.propTypes = {\r\n  conversations: PropTypes.object,\r\n  isOpenSidebar: PropTypes.bool,\r\n  activeConversationId: PropTypes.string\r\n};\r\n\r\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, ...other }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleSelectConversation = (conversationId) => {\r\n    let conversationKey = '';\r\n    const conversation = conversations.byId[conversationId];\r\n    if (conversation.type === 'GROUP') {\r\n      conversationKey = conversation.id;\r\n    } else {\r\n      const otherParticipant = conversation.participants.find(\r\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      );\r\n      conversationKey = otherParticipant.username;\r\n    }\r\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\r\n  };\r\n\r\n  return (\r\n    <List disablePadding {...other}>\r\n      {conversations.allIds.map((conversationId) => (\r\n        <ChatConversationItem\r\n          key={conversationId}\r\n          isOpenSidebar={isOpenSidebar}\r\n          conversation={conversations.byId[conversationId]}\r\n          isSelected={activeConversationId === conversationId}\r\n          onSelectConversation={() => handleSelectConversation(conversationId)}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\r\n// material\r\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, TextField, Typography, Autocomplete } from '@material-ui/core';\r\n//\r\nimport { MChip } from '../../@material-extend';\r\nimport SearchNotFound from '../../SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 3)\r\n}));\r\n\r\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\r\n  '& .MuiAutocomplete-root': {\r\n    minWidth: 280,\r\n    marginLeft: theme.spacing(2),\r\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\r\n      boxShadow: theme.customShadows.z8\r\n    }\r\n  },\r\n  '& .MuiAutocomplete-inputRoot': {\r\n    transition: theme.transitions.create('box-shadow', {\r\n      easing: theme.transitions.easing.easeInOut,\r\n      duration: theme.transitions.duration.shorter\r\n    }),\r\n    '& fieldset': {\r\n      borderWidth: `1px !important`,\r\n      borderColor: `${theme.palette.grey[500_32]} !important`\r\n    }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatHeaderCompose.propTypes = {\r\n  contacts: PropTypes.array,\r\n  recipients: PropTypes.array,\r\n  onAddRecipient: PropTypes.func\r\n};\r\n\r\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipient, ...other }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChangeQuery = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleAddRecipient = (e, recipient) => {\r\n    setQuery('');\r\n    if (onAddRecipient) {\r\n      onAddRecipient(recipient);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n        To:\r\n      </Typography>\r\n\r\n      <AutocompleteStyle>\r\n        <Autocomplete\r\n          multiple\r\n          size=\"small\"\r\n          disablePortal\r\n          popupIcon={null}\r\n          clearText={null}\r\n          noOptionsText={<SearchNotFound searchQuery={query} />}\r\n          onChange={handleAddRecipient}\r\n          onInputChange={handleChangeQuery}\r\n          options={contacts}\r\n          getOptionLabel={(recipient) => recipient.name}\r\n          renderOption={(props, recipient, { inputValue, selected }) => {\r\n            const { name, avatar } = recipient;\r\n            const matches = match(name, inputValue);\r\n            const parts = parse(name, matches);\r\n            return (\r\n              <li {...props}>\r\n                <Box\r\n                  sx={{\r\n                    width: 32,\r\n                    height: 32,\r\n                    overflow: 'hidden',\r\n                    borderRadius: '50%',\r\n                    position: 'relative'\r\n                  }}\r\n                >\r\n                  <Avatar alt={name} src={avatar} />\r\n                  <Box\r\n                    sx={{\r\n                      top: 0,\r\n                      opacity: 0,\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      position: 'absolute',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\r\n                      transition: (theme) =>\r\n                        theme.transitions.create('opacity', {\r\n                          easing: theme.transitions.easing.easeInOut,\r\n                          duration: theme.transitions.duration.shorter\r\n                        }),\r\n                      ...(selected && {\r\n                        opacity: 1,\r\n                        color: 'primary.main'\r\n                      })\r\n                    }}\r\n                  >\r\n                    <Icon icon={checkmarkFill} width={20} height={20} />\r\n                  </Box>\r\n                </Box>\r\n                <Box sx={{ ml: 2 }} />\r\n                {parts.map((part, index) => (\r\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\r\n                    {part.text}\r\n                  </Typography>\r\n                ))}\r\n              </li>\r\n            );\r\n          }}\r\n          renderTags={(recipients, getTagProps) =>\r\n            recipients.map((recipient, index) => {\r\n              const { id, name, avatar } = recipient;\r\n              return (\r\n                <MChip\r\n                  key={id}\r\n                  size=\"small\"\r\n                  label={name}\r\n                  color=\"info\"\r\n                  avatar={<Avatar alt={name} src={avatar} />}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              );\r\n            })\r\n          }\r\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\r\n        />\r\n      </AutocompleteStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { capitalCase } from 'change-case';\r\nimport videoFill from '@iconify/icons-eva/video-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Link, Avatar, Typography, AvatarGroup } from '@material-ui/core';\r\n// utils\r\nimport { fToNow } from '../../../utils/formatTime';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  flexShrink: 0,\r\n  minHeight: 92,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 3)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nOneAvatar.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nfunction OneAvatar({ participants }) {\r\n  const participant = [...participants][0];\r\n\r\n  if (participant === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <Avatar src={participant.avatar} alt={participant.name} />\r\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\r\n      </Box>\r\n      <Box sx={{ ml: 2 }}>\r\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity)}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nGroupAvatar.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nfunction GroupAvatar({ participants }) {\r\n  return (\r\n    <div>\r\n      <AvatarGroup\r\n        max={3}\r\n        sx={{\r\n          mb: 0.5,\r\n          '& .MuiAvatar-root': { width: 32, height: 32 }\r\n        }}\r\n      >\r\n        {participants.map((participant) => (\r\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\r\n        ))}\r\n      </AvatarGroup>\r\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {participants.length} persons\r\n          <Icon icon={arrowIosForwardFill} />\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nChatHeaderDetail.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nexport default function ChatHeaderDetail({ participants, ...other }) {\r\n  const isGroup = participants.length > 1;\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      <MIconButton>\r\n        <Icon icon={phoneFill} width={20} height={20} />\r\n      </MIconButton>\r\n      <MIconButton>\r\n        <Icon icon={videoFill} width={20} height={20} />\r\n      </MIconButton>\r\n      <MIconButton>\r\n        <Icon icon={moreVerticalFill} width={20} height={20} />\r\n      </MIconButton>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import faker from 'faker';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useRef, useState } from 'react';\r\nimport micFill from '@iconify/icons-eva/mic-fill';\r\nimport roundSend from '@iconify/icons-ic/round-send';\r\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\r\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Input, Divider, IconButton, InputAdornment, Stack } from '@material-ui/core';\r\n//\r\nimport EmojiPicker from '../../EmojiPicker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  minHeight: 56,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  paddingLeft: theme.spacing(2)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageInput.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  conversationId: PropTypes.string,\r\n  onSend: PropTypes.func\r\n};\r\n\r\nexport default function ChatMessageInput({ disabled, conversationId, onSend, ...other }) {\r\n  const fileInputRef = useRef(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleChangeMessage = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (event.key === 'Enter' || event.keyCode === 13) {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (!message) {\r\n      return '';\r\n    }\r\n    if (onSend) {\r\n      onSend({\r\n        conversationId,\r\n        messageId: faker.datatype.uuid(),\r\n        message,\r\n        contentType: 'text',\r\n        attachments: [],\r\n        createdAt: new Date(),\r\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      });\r\n    }\r\n    return setMessage('');\r\n  };\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Input\r\n        disabled={disabled}\r\n        fullWidth\r\n        value={message}\r\n        disableUnderline\r\n        onKeyUp={handleKeyUp}\r\n        onChange={handleChangeMessage}\r\n        placeholder=\"Type a message\"\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\r\n          </InputAdornment>\r\n        }\r\n        endAdornment={\r\n          <Stack direction=\"row\" spacing={0.5} mr={1.5}>\r\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\r\n              <Icon icon={roundAddPhotoAlternate} width={24} height={24} />\r\n            </IconButton>\r\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\r\n              <Icon icon={attach2Fill} width={24} height={24} />\r\n            </IconButton>\r\n            <IconButton disabled={disabled} size=\"small\">\r\n              <Icon icon={micFill} width={24} height={24} />\r\n            </IconButton>\r\n          </Stack>\r\n        }\r\n        sx={{ height: '100%' }}\r\n      />\r\n\r\n      <Divider orientation=\"vertical\" flexItem />\r\n\r\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\r\n        <Icon icon={roundSend} width={24} height={24} />\r\n      </IconButton>\r\n\r\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Avatar, Box, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  marginBottom: theme.spacing(3)\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 320,\r\n  padding: theme.spacing(1.5),\r\n  marginTop: theme.spacing(0.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.neutral\r\n}));\r\n\r\nconst InfoStyle = styled(Typography)(({ theme }) => ({\r\n  display: 'flex',\r\n  marginBottom: theme.spacing(0.75),\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\nconst MessageImgStyle = styled('img')(({ theme }) => ({\r\n  height: 200,\r\n  minWidth: 296,\r\n  width: '100%',\r\n  cursor: 'pointer',\r\n  objectFit: 'cover',\r\n  borderRadius: theme.shape.borderRadius\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  conversation: PropTypes.object.isRequired,\r\n  onOpenLightbox: PropTypes.func\r\n};\r\n\r\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox, ...other }) {\r\n  const sender = conversation.participants.find((participant) => participant.id === message.senderId);\r\n  const senderDetails =\r\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      ? { type: 'me' }\r\n      : { avatar: sender.avatar, name: sender.name };\r\n\r\n  const isMe = senderDetails.type === 'me';\r\n  const isImage = message.contentType === 'image';\r\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          ...(isMe && {\r\n            ml: 'auto'\r\n          })\r\n        }}\r\n      >\r\n        {senderDetails.type !== 'me' && (\r\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32 }} />\r\n        )}\r\n\r\n        <Box sx={{ ml: 2 }}>\r\n          <InfoStyle noWrap variant=\"caption\" sx={{ ...(isMe && { justifyContent: 'flex-end' }) }}>\r\n            {!isMe && `${firstName},`}&nbsp;\r\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\r\n              addSuffix: true\r\n            })}\r\n          </InfoStyle>\r\n\r\n          <ContentStyle\r\n            sx={{\r\n              ...(isMe && {\r\n                color: 'grey.800',\r\n                bgcolor: 'primary.lighter'\r\n              })\r\n            }}\r\n          >\r\n            {isImage ? (\r\n              <MessageImgStyle alt=\"attachment\" src={message.body} onClick={() => onOpenLightbox(message.body)} />\r\n            ) : (\r\n              <Typography variant=\"body2\">{message.body}</Typography>\r\n            )}\r\n          </ContentStyle>\r\n        </Box>\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { findIndex } from 'lodash';\r\nimport { useEffect, useState, useRef } from 'react';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport LightboxModal from '../../LightboxModal';\r\nimport ChatMessageItem from './ChatMessageItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageList.propTypes = {\r\n  conversation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default function ChatMessageList({ conversation }) {\r\n  const scrollRef = useRef();\r\n  const [openLightbox, setOpenLightbox] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const scrollMessagesToBottom = () => {\r\n      if (scrollRef.current) {\r\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n      }\r\n    };\r\n    scrollMessagesToBottom();\r\n  }, [conversation.messages]);\r\n\r\n  const images = conversation.messages\r\n    .filter((messages) => messages.contentType === 'image')\r\n    .map((messages) => messages.body);\r\n\r\n  const handleOpenLightbox = (url) => {\r\n    const selectedImage = findIndex(images, (index) => index === url);\r\n    setOpenLightbox(true);\r\n    setSelectedImage(selectedImage);\r\n  };\r\n\r\n  return (\r\n    <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, flexGrow: 1 }}>\r\n      {conversation.messages.map((message) => (\r\n        <ChatMessageItem\r\n          key={message.id}\r\n          message={message}\r\n          conversation={conversation}\r\n          onOpenLightbox={handleOpenLightbox}\r\n        />\r\n      ))}\r\n\r\n      <LightboxModal\r\n        images={images}\r\n        photoIndex={selectedImage}\r\n        setPhotoIndex={setSelectedImage}\r\n        isOpen={openLightbox}\r\n        onClose={() => setOpenLightbox(false)}\r\n      />\r\n    </Scrollbar>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { uniq, flatten } from 'lodash';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Button, Divider, Collapse, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fDateTime } from '../../../utils/formatTime';\r\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  flexDirection: 'column',\r\n  paddingBottom: theme.spacing(2)\r\n}));\r\n\r\nconst FileItemStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  marginTop: theme.spacing(2),\r\n  padding: theme.spacing(0, 2.5)\r\n}));\r\n\r\nconst FileThumbStyle = styled('div')(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.text.secondary,\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.grey[500_16],\r\n  '& img': { width: '100%', height: '100%' },\r\n  '& svg': { width: 24, height: 24 }\r\n}));\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  flexShrink: 0,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAttachmentItem.propTypes = {\r\n  file: PropTypes.object,\r\n  fileUrl: PropTypes.string\r\n};\r\n\r\nfunction AttachmentItem({ file, fileUrl }) {\r\n  return (\r\n    <FileItemStyle key={fileUrl}>\r\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\r\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\r\n        <Typography variant=\"body2\" noWrap>\r\n          {getFileFullName(fileUrl)}\r\n        </Typography>\r\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\r\n          {fDateTime(file.createdAt)}\r\n        </Typography>\r\n      </Box>\r\n    </FileItemStyle>\r\n  );\r\n}\r\n\r\nChatRoomAttachment.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse, ...other }) {\r\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        attachment ({totalAttachment})\r\n      </CollapseButtonStyle>\r\n\r\n      {!isCollapse && <Divider />}\r\n\r\n      <Scrollbar>\r\n        <Collapse in={isCollapse}>\r\n          {conversation.messages.map((file) => (\r\n            <div key={file.id}>\r\n              {file.attachments.map((fileUrl) => (\r\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Collapse>\r\n      </Scrollbar>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport pinFill from '@iconify/icons-eva/pin-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport emailFill from '@iconify/icons-eva/email-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, Button, Divider, Collapse, Typography, Stack } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\nconst RowIconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 16,\r\n  height: 16,\r\n  marginTop: 4,\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\r\n  flexGrow: 1,\r\n  maxWidth: 160,\r\n  wordWrap: 'break-word',\r\n  ...theme.typography.body2\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoomOneParticipant.propTypes = {\r\n  participants: PropTypes.array.isRequired,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse, ...other }) {\r\n  const participant = [...participants][0];\r\n\r\n  if (participant === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box {...other}>\r\n      <Box\r\n        sx={{\r\n          pt: 4,\r\n          pb: 3,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\r\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {participant.position}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        information\r\n      </CollapseButtonStyle>\r\n\r\n      <Collapse in={isCollapse}>\r\n        <Stack spacing={2} sx={{ p: 2.5, pt: 1 }}>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={pinFill} />\r\n            <RowTextStyle>{participant.address}</RowTextStyle>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={phoneFill} />\r\n            <RowTextStyle>{participant.phone}</RowTextStyle>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={emailFill} />\r\n            <RowTextStyle>{participant.email}</RowTextStyle>\r\n          </Stack>\r\n        </Stack>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport pinFill from '@iconify/icons-eva/pin-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport emailFill from '@iconify/icons-eva/email-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Avatar, Typography, DialogContent } from '@material-ui/core';\r\n//\r\nimport { DialogAnimate } from '../../animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RowStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  marginTop: theme.spacing(1.5)\r\n}));\r\n\r\nconst IconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 16,\r\n  height: 16,\r\n  marginRight: theme.spacing(1),\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoomPopup.propTypes = {\r\n  participant: PropTypes.object,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomPopup({ participant, isOpen, onClose, ...other }) {\r\n  const { name, avatar, position, address, phone, email } = participant;\r\n\r\n  return (\r\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose} {...other}>\r\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\r\n        <Avatar\r\n          alt={name}\r\n          src={avatar}\r\n          sx={{\r\n            mt: 5,\r\n            mb: 2,\r\n            mx: 'auto',\r\n            width: 96,\r\n            height: 96\r\n          }}\r\n        />\r\n        <Typography variant=\"h6\">{name}</Typography>\r\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\r\n          {position}\r\n        </Typography>\r\n\r\n        <RowStyle>\r\n          <IconStyle icon={pinFill} />\r\n          <Typography variant=\"body2\">{address}</Typography>\r\n        </RowStyle>\r\n        <RowStyle>\r\n          <IconStyle icon={phoneFill} />\r\n          <Typography variant=\"body2\">{phone}</Typography>\r\n        </RowStyle>\r\n        <RowStyle>\r\n          <IconStyle icon={emailFill} />\r\n          <Typography variant=\"body2\">{email}</Typography>\r\n        </RowStyle>\r\n      </DialogContent>\r\n    </DialogAnimate>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, List, Avatar, Button, Collapse, ListItem, ListItemText, ListItemAvatar } from '@material-ui/core';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport BadgeStatus from '../../BadgeStatus';\r\nimport ChatRoomPopup from './ChatRoomPopup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HEIGHT = 64;\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nParticipant.propTypes = {\r\n  participant: PropTypes.object.isRequired,\r\n  isOpen: PropTypes.bool,\r\n  onClosePopup: PropTypes.func,\r\n  onShowPopup: PropTypes.func\r\n};\r\n\r\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\r\n  const { name, avatar, status, position } = participant;\r\n\r\n  return (\r\n    <>\r\n      <ListItem button disableGutters onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\r\n        <ListItemAvatar>\r\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\r\n            <Avatar alt={name} src={avatar} />\r\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\r\n          </Box>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={name}\r\n          secondary={position}\r\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\r\n          secondaryTypographyProps={{ noWrap: true }}\r\n        />\r\n      </ListItem>\r\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\r\n    </>\r\n  );\r\n}\r\n\r\nChatRoomGroupParticipant.propTypes = {\r\n  participants: PropTypes.array.isRequired,\r\n  selectUserId: PropTypes.string,\r\n  onShowPopupUserInfo: PropTypes.func,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomGroupParticipant({\r\n  participants,\r\n  selectUserId,\r\n  onShowPopupUserInfo,\r\n  isCollapse,\r\n  onCollapse,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box {...other}>\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        disableRipple\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        In room ({participants.length})\r\n      </CollapseButtonStyle>\r\n\r\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\r\n        <Scrollbar>\r\n          <Collapse in={isCollapse}>\r\n            <List disablePadding>\r\n              {participants.map((participant) => (\r\n                <Participant\r\n                  key={participant.id}\r\n                  participant={participant}\r\n                  isOpen={selectUserId === participant.id}\r\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\r\n                  onClosePopup={() => onShowPopupUserInfo(null)}\r\n                />\r\n              ))}\r\n            </List>\r\n          </Collapse>\r\n        </Scrollbar>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { useMediaQuery, Divider, IconButton } from '@material-ui/core';\r\n//\r\nimport ChatRoomAttachment from './ChatRoomAttachment';\r\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\r\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 240,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  flexDirection: 'column',\r\n  borderLeft: `solid 1px ${theme.palette.divider}`,\r\n  transition: theme.transitions.create('width')\r\n}));\r\n\r\nconst ToggleButtonStyle = styled('div')(({ theme }) => ({\r\n  borderRight: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  top: theme.spacing(1),\r\n  left: theme.spacing(-4),\r\n  width: theme.spacing(4),\r\n  height: theme.spacing(4),\r\n  justifyContent: 'center',\r\n  boxShadow: theme.customShadows.z8,\r\n  border: `solid 1px ${theme.palette.divider}`,\r\n  borderTopLeftRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderBottomLeftRadius: theme.shape.borderRadius\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoom.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  participants: PropTypes.array.isRequired\r\n};\r\n\r\nexport default function ChatRoom({ conversation, participants, ...other }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [showInfo, setShowInfo] = useState(true);\r\n  const [selectUser, setSelectUser] = useState(null);\r\n  const [showAttachment, setShowAttachment] = useState(true);\r\n  const [showParticipants, setShowParticipants] = useState(true);\r\n  const isGroup = participants.length > 1;\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(!openSidebar && {\r\n          width: 0,\r\n          '& > *': { overflow: 'hidden' }\r\n        })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ToggleButtonStyle>\r\n        <IconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n          <Icon width={16} height={16} icon={openSidebar ? arrowIosForwardFill : arrowIosBackFill} />\r\n        </IconButton>\r\n      </ToggleButtonStyle>\r\n\r\n      {isGroup ? (\r\n        <ChatRoomGroupParticipant\r\n          selectUserId={selectUser}\r\n          participants={participants}\r\n          isCollapse={showParticipants}\r\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\r\n          onCollapse={() => setShowParticipants((prev) => !prev)}\r\n        />\r\n      ) : (\r\n        <ChatRoomOneParticipant\r\n          participants={participants}\r\n          isCollapse={showInfo}\r\n          onCollapse={() => setShowInfo((prev) => !prev)}\r\n        />\r\n      )}\r\n      <Divider />\r\n\r\n      <ChatRoomAttachment\r\n        conversation={conversation}\r\n        isCollapse={showAttachment}\r\n        onCollapse={() => setShowAttachment((prev) => !prev)}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { List, Avatar, ListItem, Typography, ListItemText, ListItemAvatar } from '@material-ui/core';\r\n//\r\nimport SearchNotFound from '../../SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatSearchResults.propTypes = {\r\n  query: PropTypes.string,\r\n  results: PropTypes.array,\r\n  onSelectContact: PropTypes.func\r\n};\r\n\r\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\r\n  const isFound = results.length > 0;\r\n\r\n  return (\r\n    <>\r\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\r\n        Contacts\r\n      </Typography>\r\n\r\n      <List disablePadding>\r\n        {results.map((result) => (\r\n          <ListItem\r\n            key={result.id}\r\n            button\r\n            onClick={() => onSelectContact(result)}\r\n            sx={{\r\n              py: 1.5,\r\n              px: 3\r\n            }}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar alt={result.name} src={result.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={result.name}\r\n              primaryTypographyProps={{\r\n                noWrap: true,\r\n                variant: 'subtitle2'\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      {!isFound && (\r\n        <SearchNotFound\r\n          searchQuery={query}\r\n          sx={{\r\n            p: 3,\r\n            mx: 'auto',\r\n            width: `calc(100% - 48px)`,\r\n            bgcolor: 'background.neutral'\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\n\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, useMediaQuery } from '@material-ui/core';\r\n// redux\r\nimport { useSelector } from '../../../redux/store';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport ChatAccount from './ChatAccount';\r\nimport ChatSearchResults from './ChatSearchResults';\r\nimport ChatContactSearch from './ChatContactSearch';\r\nimport ChatConversationList from './ChatConversationList';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 320,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  transition: theme.transitions.create('width'),\r\n  borderRight: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatSidebar() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearchFocused, setSearchFocused] = useState(false);\r\n  const displayResults = searchQuery && isSearchFocused;\r\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (!openSidebar) {\r\n      return setSearchFocused(false);\r\n    }\r\n  }, [openSidebar]);\r\n\r\n  const handleClickAwaySearch = () => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleChangeSearch = async (event) => {\r\n    try {\r\n      const { value } = event.target;\r\n      setSearchQuery(value);\r\n      if (value) {\r\n        const response = await axios.get('/api/chat/search', {\r\n          params: { query: value }\r\n        });\r\n        setSearchResults(response.data.results);\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSearchFocus = () => {\r\n    setSearchFocused(true);\r\n  };\r\n\r\n  const handleSearchSelect = (username) => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\r\n  };\r\n\r\n  const handleSelectContact = (result) => {\r\n    if (handleSearchSelect) {\r\n      handleSearchSelect(result.username);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle sx={{ ...(!openSidebar && { width: 96 }) }}>\r\n      <Box sx={{ py: 2, px: 3 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {openSidebar && (\r\n            <>\r\n              <ChatAccount />\r\n              <Box sx={{ flexGrow: 1 }} />\r\n            </>\r\n          )}\r\n\r\n          <MIconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n            <Icon width={20} height={20} icon={openSidebar ? arrowIosBackFill : arrowIosForwardFill} />\r\n          </MIconButton>\r\n\r\n          {openSidebar && (\r\n            <MIconButton to={PATH_DASHBOARD.chat.new} component={RouterLink}>\r\n              <Icon icon={editFill} width={20} height={20} />\r\n            </MIconButton>\r\n          )}\r\n        </Box>\r\n\r\n        {openSidebar && (\r\n          <ChatContactSearch\r\n            query={searchQuery}\r\n            onFocus={handleSearchFocus}\r\n            onChange={handleChangeSearch}\r\n            onClickAway={handleClickAwaySearch}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      <Scrollbar>\r\n        {!displayResults ? (\r\n          <ChatConversationList\r\n            conversations={conversations}\r\n            isOpenSidebar={openSidebar}\r\n            activeConversationId={activeConversationId}\r\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\r\n          />\r\n        ) : (\r\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\r\n        )}\r\n      </Scrollbar>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\n// material\r\nimport { Box, Divider } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../../redux/store';\r\nimport {\r\n  addRecipients,\r\n  onSendMessage,\r\n  getConversation,\r\n  getParticipants,\r\n  markConversationAsRead,\r\n  resetActiveConversation\r\n} from '../../../redux/slices/chat';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport ChatRoom from './ChatRoom';\r\nimport ChatMessageList from './ChatMessageList';\r\nimport ChatHeaderDetail from './ChatHeaderDetail';\r\nimport ChatMessageInput from './ChatMessageInput';\r\nimport ChatHeaderCompose from './ChatHeaderCompose';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst conversationSelector = (state) => {\r\n  const { conversations, activeConversationId } = state.chat;\r\n  const conversation = conversations.byId[activeConversationId];\r\n  if (conversation) {\r\n    return conversation;\r\n  }\r\n  return {\r\n    id: null,\r\n    messages: [],\r\n    participants: [],\r\n    unreadMessages: 0\r\n  };\r\n};\r\n\r\nexport default function ChatWindow() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n  const { conversationKey } = useParams();\r\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\r\n  const conversation = useSelector((state) => conversationSelector(state));\r\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\r\n\r\n  const displayParticipants = participants.filter((item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0');\r\n\r\n  useEffect(() => {\r\n    const getDetails = async () => {\r\n      dispatch(getParticipants(conversationKey));\r\n      try {\r\n        dispatch(getConversation(conversationKey));\r\n      } catch (error) {\r\n        console.error(error);\r\n        navigate(PATH_DASHBOARD.chat.new);\r\n      }\r\n    };\r\n    if (conversationKey) {\r\n      getDetails();\r\n    } else if (activeConversationId) {\r\n      dispatch(resetActiveConversation());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [conversationKey]);\r\n\r\n  useEffect(() => {\r\n    if (activeConversationId) {\r\n      dispatch(markConversationAsRead(activeConversationId));\r\n    }\r\n  }, [dispatch, activeConversationId]);\r\n\r\n  const handleAddRecipient = (recipient) => {\r\n    dispatch(addRecipients(recipient));\r\n  };\r\n\r\n  const handleSendMessage = async (value) => {\r\n    try {\r\n      dispatch(onSendMessage(value));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n      {mode === 'DETAIL' ? (\r\n        <ChatHeaderDetail participants={displayParticipants} />\r\n      ) : (\r\n        <ChatHeaderCompose\r\n          recipients={recipients}\r\n          contacts={Object.values(contacts.byId)}\r\n          onAddRecipient={handleAddRecipient}\r\n        />\r\n      )}\r\n\r\n      <Divider />\r\n\r\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\r\n        <Box sx={{ display: 'flex', flexGrow: 1, flexDirection: 'column' }}>\r\n          <ChatMessageList conversation={conversation} />\r\n\r\n          <Divider />\r\n\r\n          <ChatMessageInput\r\n            conversationId={activeConversationId}\r\n            onSend={handleSendMessage}\r\n            disabled={pathname === PATH_DASHBOARD.chat.new}\r\n          />\r\n        </Box>\r\n\r\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n// material\r\nimport { Card, Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch } from '../../redux/store';\r\nimport { getConversations, getContacts } from '../../redux/slices/chat';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { ChatSidebar, ChatWindow } from '../../components/_dashboard/chat';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Chat() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getConversations());\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Chat | Minimal-UI\">\r\n      <Container maxWidth=\"xl\">\r\n        <HeaderBreadcrumbs\r\n          heading=\"Chat\"\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\r\n        />\r\n        <Card sx={{ height: '72vh', display: 'flex' }}>\r\n          <ChatSidebar />\r\n          <ChatWindow />\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}