{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/SearchNotFound.js","components/_dashboard/user/list/UserListHead.js","components/_dashboard/user/list/UserListToolbar.js","components/_dashboard/user/list/UserMoreMenu.js","pages/dashboard/UserList.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","SearchNotFound","searchQuery","align","UserListHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","headCell","alignRight","sortDirection","id","TableSortLabel","hideSortIcon","active","onClick","property","event","label","Box","visuallyHidden","RootStyle","styled","Toolbar","height","justifyContent","theme","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","UserListToolbar","filterName","onFilterName","isLight","useTheme","mode","color","bgcolor","Typography","component","value","placeholder","startAdornment","InputAdornment","position","Icon","icon","searchFill","Tooltip","title","IconButton","trash2Fill","roundFilterList","UserMoreMenu","onDelete","userName","ref","useRef","useState","isOpen","setIsOpen","moreVerticalFill","Menu","open","anchorEl","current","onClose","PaperProps","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","trash2Outline","ListItemText","primary","primaryTypographyProps","RouterLink","to","PATH_DASHBOARD","user","root","paramCase","editFill","TABLE_HEAD","descendingComparator","a","b","UserList","dispatch","useDispatch","userList","useSelector","state","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","useEffect","getUserList","emptyRows","Math","max","length","filteredUsers","array","comparator","query","stabilizedThis","el","index","sort","filter","_user","name","toLowerCase","indexOf","applySortFilter","getComparator","isUserNotFound","Page","Container","Button","newUser","startIcon","plusFill","Card","Scrollbar","TableContainer","minWidth","Table","newSelecteds","n","TableBody","slice","row","role","status","company","avatarUrl","isVerified","isItemSelected","hover","tabIndex","aria-checked","selectedIndex","newSelected","concat","handleClick","scope","Stack","Avatar","alt","src","Label","sentenceCase","userId","deleteUser","style","colSpan","py","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/105.749a07d5.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Stack sx={sx} mb={5} spacing={2}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Stack>\r\n\r\n      {isString(moreLink) ? (\r\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n          {moreLink}\r\n        </Link>\r\n      ) : (\r\n        moreLink.map((href) => (\r\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\r\n            {href}\r\n          </Link>\r\n        ))\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        No results found for &nbsp;\r\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { visuallyHidden } from '@material-ui/utils';\r\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserListHead.propTypes = {\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n  orderBy: PropTypes.string,\r\n  rowCount: PropTypes.number,\r\n  headLabel: PropTypes.array,\r\n  numSelected: PropTypes.number,\r\n  onRequestSort: PropTypes.func,\r\n  onSelectAllClick: PropTypes.func\r\n};\r\n\r\nexport default function UserListHead({\r\n  order,\r\n  orderBy,\r\n  rowCount,\r\n  headLabel,\r\n  numSelected,\r\n  onRequestSort,\r\n  onSelectAllClick\r\n}) {\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\r\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\r\n// material\r\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Toolbar, Tooltip, IconButton, Typography, OutlinedInput, InputAdornment } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserListToolbar.propTypes = {\r\n  numSelected: PropTypes.number,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func\r\n};\r\n\r\nexport default function UserListToolbar({ numSelected, filterName, onFilterName }) {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(numSelected > 0 && {\r\n          color: isLight ? 'primary.main' : 'text.primary',\r\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography component=\"div\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <SearchStyle\r\n          value={filterName}\r\n          onChange={onFilterName}\r\n          placeholder=\"Search user...\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <Icon icon={trash2Fill} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <Icon icon={roundFilterList} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { paramCase } from 'change-case';\r\nimport { useRef, useState } from 'react';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\n// material\r\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@material-ui/core';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserMoreMenu.propTypes = {\r\n  onDelete: PropTypes.func,\r\n  userName: PropTypes.string\r\n};\r\n\r\nexport default function UserMoreMenu({ onDelete, userName }) {\r\n  const ref = useRef(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\r\n        <Icon icon={moreVerticalFill} width={20} height={20} />\r\n      </IconButton>\r\n\r\n      <Menu\r\n        open={isOpen}\r\n        anchorEl={ref.current}\r\n        onClose={() => setIsOpen(false)}\r\n        PaperProps={{\r\n          sx: { width: 200, maxWidth: '100%' }\r\n        }}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem onClick={onDelete} sx={{ color: 'text.secondary' }}>\r\n          <ListItemIcon>\r\n            <Icon icon={trash2Outline} width={24} height={24} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} />\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          component={RouterLink}\r\n          to={`${PATH_DASHBOARD.user.root}/${paramCase(userName)}/edit`}\r\n          sx={{ color: 'text.secondary' }}\r\n        >\r\n          <ListItemIcon>\r\n            <Icon icon={editFill} width={24} height={24} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import { filter } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination\r\n} from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getUserList, deleteUser } from '../../redux/slices/user';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Label from '../../components/Label';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport SearchNotFound from '../../components/SearchNotFound';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name', alignRight: false },\r\n  { id: 'company', label: 'Company', alignRight: false },\r\n  { id: 'role', label: 'Role', alignRight: false },\r\n  { id: 'isVerified', label: 'Verified', alignRight: false },\r\n  { id: 'status', label: 'Status', alignRight: false },\r\n  { id: '' }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserList() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { userList } = useSelector((state) => state.user);\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [selected, setSelected] = useState([]);\r\n  const [orderBy, setOrderBy] = useState('name');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n  }, [dispatch]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = userList.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const handleDeleteUser = (userId) => {\r\n    dispatch(deleteUser(userId));\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), filterName);\r\n\r\n  const isUserNotFound = filteredUsers.length === 0;\r\n\r\n  return (\r\n    <Page title=\"User: List | Minimal-UI\">\r\n      <Container>\r\n        <HeaderBreadcrumbs\r\n          heading=\"User List\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.root },\r\n            { name: 'List' }\r\n          ]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              to={PATH_DASHBOARD.user.newUser}\r\n              startIcon={<Icon icon={plusFill} />}\r\n            >\r\n              New User\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={userList.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    const { id, name, role, status, company, avatarUrl, isVerified } = row;\r\n                    const isItemSelected = selected.indexOf(name) !== -1;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        key={id}\r\n                        tabIndex={-1}\r\n                        role=\"checkbox\"\r\n                        selected={isItemSelected}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, name)} />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                            <Avatar alt={name} src={avatarUrl} />\r\n                            <Typography variant=\"subtitle2\" noWrap>\r\n                              {name}\r\n                            </Typography>\r\n                          </Stack>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{company}</TableCell>\r\n                        <TableCell align=\"left\">{role}</TableCell>\r\n                        <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <Label\r\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                            color={(status === 'banned' && 'error') || 'success'}\r\n                          >\r\n                            {sentenceCase(status)}\r\n                          </Label>\r\n                        </TableCell>\r\n\r\n                        <TableCell align=\"right\">\r\n                          <UserMoreMenu onDelete={() => handleDeleteUser(id)} userName={name} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                {isUserNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <SearchNotFound searchQuery={filterName} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={userList.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}