{"version":3,"sources":["components/map/controls/MapControlFullscreen.js","components/map/controls/MapControlGeolocate.js","components/map/controls/MapControlMarker.js","components/map/controls/MapControlNavigation.js","components/map/controls/MapControlPopup.js","components/map/controls/MapControlScale.js","components/map/MapMarkersPopups.js"],"names":["FullscreenControlStyle","styled","FullscreenControl","theme","zIndex","borderRadius","overflow","top","spacing","left","boxShadow","customShadows","z8","transform","MapControlFullscreen","other","GeolocateControlStyle","GeolocateControl","MapControlGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","IconStyle","height","stroke","cursor","fill","palette","error","main","MapControlMarker","onClick","viewBox","d","NavigationControlStyle","NavigationControl","bottom","borderTop","divider","MapControlNavigation","PopupStyle","Popup","isRTL","direction","maxWidth","padding","z20","shape","backgroundColor","grey","width","fontSize","opacity","color","common","white","right","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","MapControlPopup","children","onClose","tipSize","anchor","closeButton","closeOnClick","RootStyle","position","border","lineHeight","backgroundImage","MapControlScale","sx","unit","MapMarkersPopups","data","useState","tooltip","setTooltip","zoom","viewport","setViewport","onViewportChange","map","country","latitude","latlng","longitude","name","mb","display","alignItems","minWidth","backgroundSize","backgroundPosition","backgroundRepeat","country_code","toLowerCase","variant","component","timezones","alt","src","photo","mt","objectFit"],"mappings":"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","file":"static/js/123.d2c60207.chunk.js","sourcesContent":["import { FullscreenControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst FullscreenControlStyle = styled(FullscreenControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  top: theme.spacing(1.5),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& span.mapboxgl-ctrl-icon': {\r\n    transform: ' scale(0.75)'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlFullscreen({ ...other }) {\r\n  return <FullscreenControlStyle {...other} />;\r\n}\r\n","import { GeolocateControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst GeolocateControlStyle = styled(GeolocateControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  top: theme.spacing(6),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlGeolocate({ ...other }) {\r\n  return <GeolocateControlStyle positionOptions={{ enableHighAccuracy: true }} trackUserLocation {...other} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Marker } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\nconst SIZE = 20;\r\n\r\nconst IconStyle = styled('svg')(({ theme }) => ({\r\n  height: SIZE,\r\n  stroke: 'none',\r\n  cursor: 'pointer',\r\n  fill: theme.palette.error.main,\r\n  transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlMarker.propTypes = {\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default function MapControlMarker({ onClick, ...other }) {\r\n  return (\r\n    <Marker {...other}>\r\n      <IconStyle viewBox=\"0 0 24 24\" onClick={onClick}>\r\n        <path d={ICON} />\r\n      </IconStyle>\r\n    </Marker>\r\n  );\r\n}\r\n","import { NavigationControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst NavigationControlStyle = styled(NavigationControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  bottom: theme.spacing(6),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& button+button': {\r\n    borderTop: `1px solid ${theme.palette.divider}`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlNavigation({ ...other }) {\r\n  return <NavigationControlStyle {...other} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Popup } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PopupStyle = styled(Popup)(({ theme }) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return {\r\n    '& .mapboxgl-popup-content': {\r\n      maxWidth: 180,\r\n      padding: theme.spacing(1),\r\n      boxShadow: theme.customShadows.z20,\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: theme.palette.grey[800]\r\n    },\r\n    '& .mapboxgl-popup-close-button': {\r\n      width: 24,\r\n      height: 24,\r\n      fontSize: 16,\r\n      opacity: 0.48,\r\n      color: theme.palette.common.white,\r\n      right: isRTL && '0',\r\n      left: isRTL && 'auto',\r\n      '&:hover': {\r\n        opacity: 1\r\n      },\r\n      '&:focus': {\r\n        outline: 'none'\r\n      }\r\n    },\r\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\r\n      marginBottom: -1,\r\n      borderBottomColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\r\n      marginLeft: -1,\r\n      borderLeftColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\r\n      marginTop: -1,\r\n      borderTopColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\r\n      marginRight: -1,\r\n      borderRightColor: theme.palette.grey[800]\r\n    }\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlPopup.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function MapControlPopup({ children, onClose, ...other }) {\r\n  return (\r\n    <PopupStyle tipSize={8} anchor=\"bottom\" onClose={onClose} closeButton closeOnClick={false} {...other}>\r\n      {children}\r\n    </PopupStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { ScaleControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  zIndex: 99,\r\n  position: 'absolute',\r\n  left: theme.spacing(1.5),\r\n  bottom: theme.spacing(3.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& .mapboxgl-ctrl': {\r\n    border: 'none',\r\n    borderRadius: 4,\r\n    lineHeight: '14px',\r\n    color: theme.palette.common.white,\r\n    backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlScale.propTypes = {\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function MapControlScale({ sx, ...other }) {\r\n  return (\r\n    <RootStyle sx={sx}>\r\n      <ScaleControl maxWidth={100} unit=\"imperial\" {...other} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import MapGL from 'react-map-gl';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// material\r\nimport { Box, Typography } from '@material-ui/core';\r\n//\r\nimport {\r\n  MapControlPopup,\r\n  MapControlMarker,\r\n  MapControlScale,\r\n  MapControlGeolocate,\r\n  MapControlNavigation,\r\n  MapControlFullscreen\r\n} from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapMarkersPopups.propTypes = {\r\n  data: PropTypes.array\r\n};\r\n\r\nexport default function MapMarkersPopups({ data, ...other }) {\r\n  const [tooltip, setTooltip] = useState(null);\r\n  const [viewport, setViewport] = useState({\r\n    zoom: 2\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\r\n        <MapControlScale />\r\n        <MapControlNavigation />\r\n        <MapControlFullscreen />\r\n        <MapControlGeolocate />\r\n\r\n        {data.map((country) => (\r\n          <MapControlMarker\r\n            key={country.name}\r\n            latitude={country.latlng[0]}\r\n            longitude={country.latlng[1]}\r\n            onClick={() => setTooltip(country)}\r\n          />\r\n        ))}\r\n\r\n        {tooltip && (\r\n          <MapControlPopup longitude={tooltip.latlng[1]} latitude={tooltip.latlng[0]} onClose={() => setTooltip(false)}>\r\n            <Box sx={{ color: 'common.white' }}>\r\n              <Box\r\n                sx={{\r\n                  mb: 1,\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    height: '18px',\r\n                    minWidth: '28px',\r\n                    marginRight: '8px',\r\n                    borderRadius: '4px',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${tooltip.country_code.toLowerCase()}.svg)`\r\n                  }}\r\n                />\r\n                <Typography variant=\"subtitle2\">{tooltip.name}</Typography>\r\n              </Box>\r\n              <Typography component=\"div\" variant=\"caption\">\r\n                Timezones: {tooltip.timezones}\r\n              </Typography>\r\n              <Typography component=\"div\" variant=\"caption\">\r\n                Lat: {tooltip.latlng[0]}\r\n              </Typography>\r\n              <Typography component=\"div\" variant=\"caption\">\r\n                Long: {tooltip.latlng[1]}\r\n              </Typography>\r\n              <Box\r\n                component=\"img\"\r\n                alt={tooltip.name}\r\n                src={tooltip.photo}\r\n                sx={{\r\n                  mt: 1,\r\n                  height: 90,\r\n                  width: '100%',\r\n                  borderRadius: 1,\r\n                  objectFit: 'cover'\r\n                }}\r\n              />\r\n            </Box>\r\n          </MapControlPopup>\r\n        )}\r\n      </MapGL>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}