{"version":3,"sources":["components/authentication/reset-password/ResetPasswordForm.js","pages/authentication/ResetPassword.js"],"names":["ResetPasswordForm","onSent","onGetEmail","resetPassword","useAuth","isMountedRef","useIsMountedRef","ResetPasswordSchema","Yup","shape","email","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","current","console","error","afterSubmit","message","errors","touched","isSubmitting","handleSubmit","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","TextField","fullWidth","type","label","Boolean","helperText","LoadingButton","size","variant","loading","RootStyle","styled","Page","display","minHeight","alignItems","justifyContent","padding","theme","ResetPassword","useState","setEmail","sent","setSent","title","LogoOnlyLayout","Container","Box","sx","maxWidth","mx","textAlign","mb","height","Typography","gutterBottom","Button","component","RouterLink","to","PATH_AUTH","login","mt","paragraph","color"],"mappings":"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","file":"static/js/134.f9c05c0c.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { TextField, Alert, Stack } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nResetPasswordForm.propTypes = {\r\n  onSent: PropTypes.func,\r\n  onGetEmail: PropTypes.func\r\n};\r\n\r\nexport default function ResetPasswordForm({ onSent, onGetEmail }) {\r\n  const { resetPassword } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  const ResetPasswordSchema = Yup.object().shape({\r\n    email: Yup.string().email('Email must be a valid email address').required('Email is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: 'demo@minimals.cc'\r\n    },\r\n    validationSchema: ResetPasswordSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        await resetPassword(values.email);\r\n        if (isMountedRef.current) {\r\n          onSent();\r\n          onGetEmail(formik.values.email);\r\n          setSubmitting(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (isMountedRef.current) {\r\n          setErrors({ afterSubmit: error.message });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\r\n\r\n          <TextField\r\n            fullWidth\r\n            {...getFieldProps('email')}\r\n            type=\"email\"\r\n            label=\"Email address\"\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n\r\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Reset Password\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Button, Container, Typography } from '@material-ui/core';\r\n// layouts\r\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport { ResetPasswordForm } from '../../components/authentication/reset-password';\r\n//\r\nimport { SentIcon } from '../../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  display: 'flex',\r\n  minHeight: '100%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [sent, setSent] = useState(false);\r\n\r\n  return (\r\n    <RootStyle title=\"Reset Password | Minimal UI\">\r\n      <LogoOnlyLayout />\r\n\r\n      <Container>\r\n        <Box sx={{ maxWidth: 480, mx: 'auto' }}>\r\n          {!sent ? (\r\n            <>\r\n              <Typography variant=\"h3\" paragraph>\r\n                Forgot your password?\r\n              </Typography>\r\n              <Typography sx={{ color: 'text.secondary', mb: 5 }}>\r\n                Please enter the email address associated with your account and We will email you a link to reset your\r\n                password.\r\n              </Typography>\r\n\r\n              <ResetPasswordForm onSent={() => setSent(true)} onGetEmail={(value) => setEmail(value)} />\r\n\r\n              <Button fullWidth size=\"large\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 1 }}>\r\n                Back\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Box sx={{ textAlign: 'center' }}>\r\n              <SentIcon sx={{ mb: 5, mx: 'auto', height: 160 }} />\r\n\r\n              <Typography variant=\"h3\" gutterBottom>\r\n                Request sent successfully\r\n              </Typography>\r\n              <Typography>\r\n                We have sent a confirmation email to &nbsp;\r\n                <strong>{email}</strong>\r\n                <br />\r\n                Please check your email.\r\n              </Typography>\r\n\r\n              <Button size=\"large\" variant=\"contained\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 5 }}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}