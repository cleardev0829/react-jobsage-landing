{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/material-ui/table/BasicTable.js","pages/components-overview/material-ui/table/collapsible-table/CollapsibleTableRow.js","pages/components-overview/material-ui/table/collapsible-table/index.js","pages/components-overview/material-ui/table/sorting-selecting/SortingSelectingHead.js","pages/components-overview/material-ui/table/sorting-selecting/SortingSelectingToolbar.js","pages/components-overview/material-ui/table/sorting-selecting/index.js","pages/components-overview/material-ui/table/GroupingFixedHeader.js","pages/components-overview/material-ui/table/index.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","createData","name","calories","fat","carbs","protein","BASIC_TABLE","BasicTable","Scrollbar","TableContainer","minWidth","mt","Table","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","CollapsibleTable","useState","open","setOpen","IconButton","size","onClick","icon","arrowIosUpwardFill","arrowIosDownwardFill","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","aria-label","history","historyRow","date","customerId","amount","Math","round","price","COLLAPSIBLE_TABLE","SortingSelectingHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","numeric","disablePadding","sortDirection","id","TableSortLabel","active","property","event","label","visuallyHidden","RootStyle","styled","Toolbar","height","justifyContent","theme","SortingSelectingToolbar","isLight","useTheme","palette","mode","color","bgcolor","Tooltip","title","trash2Fill","roundFilterList","SORTING_SELECTING_TABLE","TABLE_HEAD","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","SortingSelecting","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","max","length","newSelecteds","n","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","position","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","px","py","top","md","FormControlLabel","control","Switch","code","population","density","GROUPING_TABLE","COLUMNS","format","toLocaleString","toFixed","GroupingFixedHeader","maxHeight","stickyHeader","background","paper","column","Page","TableComponent","pt","pb","Container","maxWidth","PATH_PAGE","components","Stack","Card","CardHeader"],"mappings":"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","file":"static/js/115.3588f2a3.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Stack sx={sx} mb={5} spacing={2}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Stack>\r\n\r\n      {isString(moreLink) ? (\r\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n          {moreLink}\r\n        </Link>\r\n      ) : (\r\n        moreLink.map((href) => (\r\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\r\n            {href}\r\n          </Link>\r\n        ))\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n","// material\r\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@material-ui/core';\r\n// components\r\nimport Scrollbar from '../../../../components/Scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst BASIC_TABLE = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BasicTable() {\r\n  return (\r\n    <Scrollbar>\r\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {BASIC_TABLE.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Scrollbar>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport arrowIosUpwardFill from '@iconify/icons-eva/arrow-ios-upward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport {\r\n  Box,\r\n  Table,\r\n  Collapse,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Typography,\r\n  IconButton\r\n} from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCollapsibleTable.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired\r\n      })\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default function CollapsibleTable({ row }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>\r\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\r\n            <Icon icon={open ? arrowIosUpwardFill : arrowIosDownwardFill} />\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.calories}</TableCell>\r\n        <TableCell align=\"right\">{row.fat}</TableCell>\r\n        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n        <TableCell align=\"right\">{row.protein}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n","// material\r\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@material-ui/core';\r\n// components\r\nimport Scrollbar from '../../../../../components/Scrollbar';\r\n//\r\nimport CollapsibleTableRow from './CollapsibleTableRow';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      {\r\n        date: '2020-01-05',\r\n        customerId: '11091700',\r\n        amount: 3\r\n      },\r\n      {\r\n        date: '2020-01-02',\r\n        customerId: 'Anonymous',\r\n        amount: 1\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nconst COLLAPSIBLE_TABLE = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5)\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n  return (\r\n    <Scrollbar>\r\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {COLLAPSIBLE_TABLE.map((row) => (\r\n              <CollapsibleTableRow key={row.name} row={row} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Scrollbar>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { visuallyHidden } from '@material-ui/utils';\r\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSortingSelectingHead.propTypes = {\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  headLabel: PropTypes.array.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired\r\n};\r\n\r\nexport default function SortingSelectingHead({\r\n  order,\r\n  orderBy,\r\n  rowCount,\r\n  headLabel,\r\n  numSelected,\r\n  onRequestSort,\r\n  onSelectAllClick\r\n}) {\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts'\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={{ ...visuallyHidden }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\r\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\r\n// material\r\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Toolbar, Tooltip, Typography, IconButton } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSortingSelectingToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nexport default function SortingSelectingToolbar({ numSelected }) {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(numSelected > 0 && {\r\n          color: isLight ? 'primary.main' : 'text.primary',\r\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Sorting & Selecting\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <Icon icon={trash2Fill} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <Icon icon={roundFilterList} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// material\r\nimport {\r\n  Box,\r\n  Table,\r\n  Switch,\r\n  Checkbox,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TablePagination,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n// components\r\nimport Scrollbar from '../../../../../components/Scrollbar';\r\n//\r\nimport SortingSelectingHead from './SortingSelectingHead';\r\nimport SortingSelectingToolbar from './SortingSelectingToolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst SORTING_SELECTING_TABLE = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0)\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Dessert (100g serving)'\r\n  },\r\n  {\r\n    id: 'calories',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Calories'\r\n  },\r\n  {\r\n    id: 'fat',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Fat (g)'\r\n  },\r\n  {\r\n    id: 'carbs',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Carbs (g)'\r\n  },\r\n  {\r\n    id: 'protein',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Protein (g)'\r\n  }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function SortingSelecting() {\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('calories');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = SORTING_SELECTING_TABLE.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty SORTING_SELECTING_TABLE.\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - SORTING_SELECTING_TABLE.length) : 0;\r\n\r\n  return (\r\n    <>\r\n      <SortingSelectingToolbar numSelected={selected.length} />\r\n\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 800 }}>\r\n          <Table size={dense ? 'small' : 'medium'}>\r\n            <SortingSelectingHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              headLabel={TABLE_HEAD}\r\n              numSelected={selected.length}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={SORTING_SELECTING_TABLE.length}\r\n              onSelectAllClick={handleSelectAllClick}\r\n            />\r\n            <TableBody>\r\n              {stableSort(SORTING_SELECTING_TABLE, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isItemSelected} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n\r\n      <Box sx={{ position: 'relative' }}>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={SORTING_SELECTING_TABLE.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n        <Box\r\n          sx={{\r\n            px: 3,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: { md: 'absolute' }\r\n          }}\r\n        >\r\n          <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// material\r\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer, TablePagination } from '@material-ui/core';\r\n// components\r\nimport Scrollbar from '../../../../components/Scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst GROUPING_TABLE = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767)\r\n];\r\n\r\nconst COLUMNS = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US')\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US')\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2)\r\n  }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function GroupingFixedHeader() {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 800, maxHeight: 400 }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={2}\r\n                  sx={{\r\n                    background: (theme) => theme.palette.background.paper\r\n                  }}\r\n                >\r\n                  Country\r\n                </TableCell>\r\n                <TableCell align=\"center\" colSpan={3} sx={{ background: (theme) => theme.palette.background.paper }}>\r\n                  Details\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                {COLUMNS.map((column) => (\r\n                  <TableCell key={column.id} align={column.align} style={{ top: 56, minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {GROUPING_TABLE.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {COLUMNS.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n\r\n      <TablePagination\r\n        page={page}\r\n        component=\"div\"\r\n        count={GROUPING_TABLE.length}\r\n        rowsPerPage={rowsPerPage}\r\n        onPageChange={handleChangePage}\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Container, CardHeader, Stack } from '@material-ui/core';\r\n// routes\r\nimport { PATH_PAGE } from '../../../../routes/paths';\r\n// components\r\nimport Page from '../../../../components/Page';\r\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\r\n//\r\nimport BasicTable from './BasicTable';\r\nimport CollapsibleTable from './collapsible-table';\r\nimport SortingSelecting from './sorting-selecting';\r\nimport GroupingFixedHeader from './GroupingFixedHeader';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  paddingTop: theme.spacing(11),\r\n  paddingBottom: theme.spacing(15)\r\n}));\r\n\r\nexport default function TableComponent() {\r\n  return (\r\n    <RootStyle title=\"Components: Table | Minimal-UI\">\r\n      <Box\r\n        sx={{\r\n          pt: 6,\r\n          pb: 1,\r\n          mb: 10,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <HeaderBreadcrumbs\r\n            heading=\"Table\"\r\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Table' }]}\r\n            moreLink=\"https://next.material-ui.com/components/tables\"\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Stack spacing={5}>\r\n          <Card>\r\n            <CardHeader title=\"Basic Table\" />\r\n            <BasicTable />\r\n          </Card>\r\n\r\n          <Card>\r\n            <SortingSelecting />\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Grouping & FixedHeader\" />\r\n            <GroupingFixedHeader />\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Collapsible Table\" />\r\n            <CollapsibleTable />\r\n          </Card>\r\n        </Stack>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}