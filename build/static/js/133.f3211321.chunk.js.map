{"version":3,"sources":["pages/ComingSoon.js","hooks/useCountdown.js"],"names":["SOCIALS","name","icon","facebookFill","width","height","color","instagramFilled","linkedinFill","twitterFill","RootStyle","styled","Page","theme","minHeight","display","alignItems","paddingTop","spacing","paddingBottom","CountdownStyle","justifyContent","SeparatorStyle","Typography","margin","breakpoints","up","ComingSoon","countdown","date","useState","days","hours","minutes","seconds","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","distanceToNow","Date","getDays","Math","floor","getHours","slice","getMinutes","getSeconds","useCountdown","title","Container","Box","sx","maxWidth","textAlign","variant","paragraph","my","OutlinedInput","fullWidth","placeholder","endAdornment","InputAdornment","position","Button","size","pr","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","mx","map","social","Tooltip"],"mappings":"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","file":"static/js/133.f3211321.chunk.js","sourcesContent":["import { Icon } from '@iconify/react';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Button, Tooltip, Container, Typography, InputAdornment, OutlinedInput } from '@material-ui/core';\r\n// hooks\r\nimport useCountdown from '../hooks/useCountdown';\r\n// components\r\nimport { MIconButton } from '../components/@material-extend';\r\nimport Page from '../components/Page';\r\nimport { MaintenanceIllustration } from '../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SOCIALS = [\r\n  {\r\n    name: 'Facebook',\r\n    icon: <Icon icon={facebookFill} width={24} height={24} color=\"#1877F2\" />\r\n  },\r\n  {\r\n    name: 'Instagram',\r\n    icon: <Icon icon={instagramFilled} width={24} height={24} color=\"#D7336D\" />\r\n  },\r\n  {\r\n    name: 'Linkedin',\r\n    icon: <Icon icon={linkedinFill} width={24} height={24} color=\"#006097\" />\r\n  },\r\n  {\r\n    name: 'Twitter',\r\n    icon: <Icon icon={twitterFill} width={24} height={24} color=\"#1C9CEA\" />\r\n  }\r\n];\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  minHeight: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  paddingTop: theme.spacing(15),\r\n  paddingBottom: theme.spacing(10)\r\n}));\r\n\r\nconst CountdownStyle = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n});\r\n\r\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1),\r\n  [theme.breakpoints.up('sm')]: {\r\n    margin: theme.spacing(0, 2.5)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComingSoon() {\r\n  const countdown = useCountdown(new Date('07/07/2022 21:30'));\r\n\r\n  return (\r\n    <RootStyle title=\"Coming Soon | Minimal-UI\">\r\n      <Container>\r\n        <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" paragraph>\r\n            Coming Soon!\r\n          </Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>We are currently working hard on this page!</Typography>\r\n\r\n          <MaintenanceIllustration sx={{ my: 10, height: 240 }} />\r\n\r\n          <CountdownStyle>\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.days}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Days</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.hours}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Hours</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.minutes}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Minutes</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.seconds}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Seconds</Typography>\r\n            </div>\r\n          </CountdownStyle>\r\n\r\n          <OutlinedInput\r\n            fullWidth\r\n            placeholder=\"Enter your email\"\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <Button variant=\"contained\" size=\"large\">\r\n                  Notify Me\r\n                </Button>\r\n              </InputAdornment>\r\n            }\r\n            sx={{\r\n              my: 5,\r\n              pr: 0.5,\r\n              transition: (theme) =>\r\n                theme.transitions.create('box-shadow', {\r\n                  easing: theme.transitions.easing.easeInOut,\r\n                  duration: theme.transitions.duration.shorter\r\n                }),\r\n              '&.Mui-focused': {\r\n                boxShadow: (theme) => theme.customShadows.z8\r\n              },\r\n              '& fieldset': {\r\n                borderWidth: `1px !important`,\r\n                borderColor: (theme) => `${theme.palette.grey[500_32]} !important`\r\n              }\r\n            }}\r\n          />\r\n\r\n          <Box sx={{ textAlign: 'center', '& > *': { mx: 1 } }}>\r\n            {SOCIALS.map((social) => (\r\n              <Tooltip key={social.name} title={social.name}>\r\n                <MIconButton>{social.icon}</MIconButton>\r\n              </Tooltip>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useCountdown(date) {\r\n  const [countdown, setCountdown] = useState({\r\n    days: '00',\r\n    hours: '00',\r\n    minutes: '00',\r\n    seconds: '00'\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setNewTime(), 1000);\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setNewTime = () => {\r\n    const startTime = date;\r\n    const endTime = new Date();\r\n    const distanceToNow = startTime - endTime;\r\n\r\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\r\n    const getHours = `0${Math.floor((distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}`.slice(-2);\r\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\r\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\r\n\r\n    setCountdown({\r\n      days: getDays || '000',\r\n      hours: getHours || '000',\r\n      minutes: getMinutes || '000',\r\n      seconds: getSeconds || '000'\r\n    });\r\n  };\r\n\r\n  return countdown;\r\n}\r\n\r\n// Usage\r\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\r\n"],"sourceRoot":""}