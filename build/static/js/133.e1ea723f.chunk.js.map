{"version":3,"sources":["components/authentication/register/RegisterForm.js","pages/authentication/Register.js"],"names":["RegisterForm","register","useAuth","isMountedRef","useIsMountedRef","useSnackbar","enqueueSnackbar","closeSnackbar","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","variant","action","key","size","onClick","icon","closeFill","current","console","error","afterSubmit","message","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","TextField","fullWidth","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","prev","eyeFill","eyeOffFill","LoadingButton","loading","RootStyle","styled","Page","theme","breakpoints","up","display","ContentStyle","width","margin","minHeight","flexDirection","justifyContent","padding","textAlign","Register","method","title","Container","Paper","sx","py","px","borderRadius","zIndex","modal","boxShadow","customShadows","z20","direction","alignItems","mb","to","Logo","Box","flexGrow","Typography","gutterBottom","AuthFirebaseSocial","mt","color","style","fontWeight","Link","PATH_AUTH","login","component","RouterLink"],"mappings":"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","file":"static/js/133.e1ea723f.chunk.js","sourcesContent":["import * as Yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useFormik, Form, FormikProvider } from \"formik\";\r\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\r\nimport closeFill from \"@iconify/icons-eva/close-fill\";\r\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\";\r\n// material\r\nimport {\r\n  Stack,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Alert,\r\n} from \"@material-ui/core\";\r\nimport { LoadingButton } from \"@material-ui/lab\";\r\n// hooks\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useIsMountedRef from \"../../../hooks/useIsMountedRef\";\r\n//\r\nimport { MIconButton } from \"../../@material-extend\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function RegisterForm() {\r\n  const { register } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Organization name required\"),\r\n    lastName: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Contact name required\"),\r\n    email: Yup.string()\r\n      .email(\"Email must be a valid email address\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        await register(\r\n          values.email,\r\n          values.password,\r\n          values.firstName,\r\n          values.lastName\r\n        );\r\n        enqueueSnackbar(\"Register success\", {\r\n          variant: \"success\",\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          ),\r\n        });\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (isMountedRef.current) {\r\n          setErrors({ afterSubmit: error.message });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          {errors.afterSubmit && (\r\n            <Alert severity=\"error\">{errors.afterSubmit}</Alert>\r\n          )}\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Name of the organization\"\r\n            {...getFieldProps(\"firstName\")}\r\n            error={Boolean(touched.firstName && errors.firstName)}\r\n            helperText={touched.firstName && errors.firstName}\r\n            required\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Contact person\"\r\n            {...getFieldProps(\"lastName\")}\r\n            error={Boolean(touched.lastName && errors.lastName)}\r\n            helperText={touched.lastName && errors.lastName}\r\n            required\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            type=\"email\"\r\n            label=\"Email ID\"\r\n            {...getFieldProps(\"email\")}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n            required\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            label=\"Password\"\r\n            {...getFieldProps(\"password\")}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    onClick={() => setShowPassword((prev) => !prev)}\r\n                  >\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n            required\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            label=\"Confirm Password\"\r\n            {...getFieldProps(\"password\")}           \r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n            required\r\n          />\r\n\r\n          <LoadingButton\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            loading={isSubmitting}\r\n          >\r\n            SUBMIT\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { Link as RouterLink } from \"react-router-dom\";\r\n// material\r\nimport { experimentalStyled as styled } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Paper,\r\n  Link,\r\n  Container,\r\n  Typography,\r\n  Tooltip,\r\n  Stack,\r\n} from \"@material-ui/core\";\r\n// hooks\r\nimport useAuth from \"../../hooks/useAuth\";\r\n// routes\r\nimport { PATH_AUTH } from \"../../routes/paths\";\r\n// layouts\r\nimport AuthLayout from \"../../layouts/AuthLayout\";\r\n// components\r\nimport Page from \"../../components/Page\";\r\nimport { MHidden } from \"../../components/@material-extend\";\r\nimport { RegisterForm } from \"../../components/authentication/register\";\r\nimport AuthFirebaseSocials from \"../../components/authentication/AuthFirebaseSocial\";\r\nimport Logo from \"src/components/Logo\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\r\n  width: 800,\r\n  margin: \"auto\",\r\n  display: \"flex\",\r\n  minHeight: \"100vh\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  padding: theme.spacing(12, 0),\r\n  textAlign: \"center\",\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Register() {\r\n  const { method } = useAuth();\r\n\r\n  return (\r\n    <RootStyle title=\"Register | Minimal-UI\">\r\n      <Container>\r\n        <ContentStyle>\r\n          <Paper\r\n            sx={{\r\n              py: 3,\r\n              px: 16,\r\n              width: \"100%\",\r\n              borderRadius: 2,\r\n              zIndex: (theme) => theme.zIndex.modal,\r\n              boxShadow: (theme) => theme.customShadows.z20,\r\n            }}\r\n          >\r\n            <Stack\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              spacing={2}\r\n              sx={{ mb: 4 }}\r\n            >\r\n              <RouterLink to=\"/\">\r\n                <Logo />\r\n              </RouterLink>\r\n              <Box sx={{ flexGrow: 1 }}>\r\n                <Typography variant=\"h3\" gutterBottom>\r\n                  Start your free Trial\r\n                </Typography>\r\n              </Box>\r\n            </Stack>\r\n\r\n            {method === \"firebase\" && <AuthFirebaseSocials />}\r\n\r\n            <RegisterForm />\r\n\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              sx={{ mt: 3, textAlign: \"center\" }}\r\n              color=\"text.secondary\"\r\n            >\r\n              <span style={{ fontWeight: 500 }}>\r\n                Already have an account?&nbsp;\r\n              </span>\r\n              <Link\r\n                to={PATH_AUTH.login}\r\n                component={RouterLink}\r\n                color=\"secondary\"\r\n              >\r\n                <span style={{ fontWeight: 600 }}>Login</span>\r\n              </Link>\r\n            </Typography>\r\n          </Paper>\r\n        </ContentStyle>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}