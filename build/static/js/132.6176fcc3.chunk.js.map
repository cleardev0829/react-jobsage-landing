{"version":3,"sources":["../node_modules/@iconify/icons-eva/arrow-ios-back-fill.js","components/authentication/verify-code/VerifyCodeForm.js","pages/authentication/VerifyCode.js"],"names":["exports","__esModule","default","maxLength","object","target","value","length","slice","VerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","formik","useFormik","initialValues","validationSchema","onSubmit","a","fakeRequest","variant","PATH_DASHBOARD","root","values","errors","isValid","touched","isSubmitting","handleSubmit","getFieldProps","autoComplete","noValidate","Stack","direction","spacing","justifyContent","Object","keys","map","item","OutlinedInput","type","placeholder","onInput","error","Boolean","inputProps","sx","p","textAlign","width","xs","sm","height","FormHelperText","style","LoadingButton","fullWidth","size","loading","mt","RootStyle","styled","Page","display","minHeight","alignItems","padding","theme","VerifyCode","title","LogoOnlyLayout","Container","Box","maxWidth","mx","Button","component","RouterLink","to","PATH_AUTH","login","startIcon","icon","arrowIosBackFill","mb","Typography","paragraph","color","align","Link","underline","onClick"],"mappings":"sIAKAA,EAAQC,YAAa,EACrBD,EAAQE,QANG,CACV,KAAQ,sJACR,MAAS,GACT,OAAU,K,mUCYX,SAASC,EAAUC,GACjB,GAAIA,EAAOC,OAAOC,MAAMC,OAASH,EAAOC,OAAOF,UAC7C,OAAQC,EAAOC,OAAOC,MAAQF,EAAOC,OAAOC,MAAME,MAAM,EAAGJ,EAAOC,OAAOF,WAI9D,SAASM,IACtB,IAAMC,EAAWC,cACTC,EAAoBC,cAApBD,gBAEFE,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaG,SAAS,oBAC7BC,MAAOJ,MAAaG,SAAS,oBAC7BE,MAAOL,MAAaG,SAAS,oBAC7BG,MAAON,MAAaG,SAAS,oBAC7BI,MAAOP,MAAaG,SAAS,oBAC7BK,MAAOR,MAAaG,SAAS,sBAGzBM,EAASC,YAAU,CACvBC,cAAe,CACbT,MAAO,GACPE,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,IAETI,iBAAkBb,EAClBc,SAAS,WAAD,4BAAE,sBAAAC,EAAA,sEACFC,YAAY,KADV,OAERlB,EAAgB,iBAAkB,CAAEmB,QAAS,YAC7CrB,EAASsB,IAAeC,MAHhB,2CAAF,kDAAC,KAOHC,EAAgFV,EAAhFU,OAAQC,EAAwEX,EAAxEW,OAAQC,EAAgEZ,EAAhEY,QAASC,EAAuDb,EAAvDa,QAASC,EAA8Cd,EAA9Cc,aAAcC,EAAgCf,EAAhCe,aAAcC,EAAkBhB,EAAlBgB,cAEtE,OACE,cAAC,IAAD,CAAgBlC,MAAOkB,EAAvB,SACE,eAAC,IAAD,CAAMiB,aAAa,MAAMC,YAAU,EAACd,SAAUW,EAA9C,UACE,cAACI,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGC,eAAe,SAAlD,SACGC,OAAOC,KAAKd,GAAQe,KAAI,SAACC,GAAD,OACvB,cAACC,EAAA,EAAD,2BAEMX,EAAcU,IAFpB,IAGEE,KAAK,SACLC,YAAY,IACZC,QAASnD,EACToD,MAAOC,QAAQnB,EAAQa,IAASf,EAAOe,IACvCO,WAAY,CACVtD,UAAW,EACXuD,GAAI,CACFC,EAAG,EACHC,UAAW,SACXC,MAAO,CAAEC,GAAI,GAAIC,GAAI,IACrBC,OAAQ,CAAEF,GAAI,GAAIC,GAAI,QAZrBb,QAmBX,cAACe,EAAA,EAAD,CAAgBV,OAAQnB,EAAS8B,MAAO,CAAEN,UAAW,SAArD,UACIxB,GAAW,qBAGf,cAAC+B,EAAA,EAAD,CAAeC,WAAS,EAACC,KAAK,QAAQjB,KAAK,SAASrB,QAAQ,YAAYuC,QAAShC,EAAcoB,GAAI,CAAEa,GAAI,GAAzG,yBClER,IAAMC,EAAYC,YAAOC,IAAPD,EAAa,kBAAgB,CAC7CE,QAAS,OACTC,UAAW,OACXC,WAAY,SACZC,QAJ6B,EAAGC,MAIjBlC,QAAQ,GAAI,OAKd,SAASmC,IACtB,OACE,eAACR,EAAD,CAAWS,MAAM,sBAAjB,UACE,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAK1B,GAAI,CAAE2B,SAAU,IAAKC,GAAI,QAA9B,UACE,cAACC,EAAA,EAAD,CACElB,KAAK,QACLmB,UAAWC,IACXC,GAAIC,IAAUC,MACdC,UAAW,cAAC,OAAD,CAAMC,KAAMC,IAAkBlC,MAAO,GAAIG,OAAQ,KAC5DN,GAAI,CAAEsC,GAAI,GALZ,kBAUA,cAACC,EAAA,EAAD,CAAYlE,QAAQ,KAAKmE,WAAS,EAAlC,sCAGA,cAACD,EAAA,EAAD,CAAYvC,GAAI,CAAEyC,MAAO,kBAAzB,iIAKA,cAACf,EAAA,EAAD,CAAK1B,GAAI,CAAEa,GAAI,EAAGyB,GAAI,GAAtB,SACE,cAACvF,EAAD,MAGF,eAACwF,EAAA,EAAD,CAAYlE,QAAQ,QAAQqE,MAAM,SAAlC,yCAEE,cAACC,EAAA,EAAD,CAAMtE,QAAQ,YAAYuE,UAAU,OAAOC,QAAS,aAApD","file":"static/js/132.6176fcc3.chunk.js","sourcesContent":["var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M13.83 19a1 1 0 0 1-.78-.37l-4.83-6a1 1 0 0 1 0-1.27l5-6a1 1 0 0 1 1.54 1.28L10.29 12l4.32 5.36a1 1 0 0 1-.78 1.64z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { OutlinedInput, FormHelperText, Stack } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// utils\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// eslint-disable-next-line consistent-return\r\nfunction maxLength(object) {\r\n  if (object.target.value.length > object.target.maxLength) {\r\n    return (object.target.value = object.target.value.slice(0, object.target.maxLength));\r\n  }\r\n}\r\n\r\nexport default function VerifyCodeForm() {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    code1: Yup.number().required('Code is required'),\r\n    code2: Yup.number().required('Code is required'),\r\n    code3: Yup.number().required('Code is required'),\r\n    code4: Yup.number().required('Code is required'),\r\n    code5: Yup.number().required('Code is required'),\r\n    code6: Yup.number().required('Code is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      code1: '',\r\n      code2: '',\r\n      code3: '',\r\n      code4: '',\r\n      code5: '',\r\n      code6: ''\r\n    },\r\n    validationSchema: VerifyCodeSchema,\r\n    onSubmit: async () => {\r\n      await fakeRequest(500);\r\n      enqueueSnackbar('Verify success', { variant: 'success' });\r\n      navigate(PATH_DASHBOARD.root);\r\n    }\r\n  });\r\n\r\n  const { values, errors, isValid, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n          {Object.keys(values).map((item) => (\r\n            <OutlinedInput\r\n              key={item}\r\n              {...getFieldProps(item)}\r\n              type=\"number\"\r\n              placeholder=\"-\"\r\n              onInput={maxLength}\r\n              error={Boolean(touched[item] && errors[item])}\r\n              inputProps={{\r\n                maxLength: 1,\r\n                sx: {\r\n                  p: 0,\r\n                  textAlign: 'center',\r\n                  width: { xs: 36, sm: 56 },\r\n                  height: { xs: 36, sm: 56 }\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n        </Stack>\r\n\r\n        <FormHelperText error={!isValid} style={{ textAlign: 'right' }}>\r\n          {!isValid && 'Code is required'}\r\n        </FormHelperText>\r\n\r\n        <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting} sx={{ mt: 3 }}>\r\n          Verify\r\n        </LoadingButton>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Button, Link, Container, Typography } from '@material-ui/core';\r\n// layouts\r\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport { VerifyCodeForm } from '../../components/authentication/verify-code';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  display: 'flex',\r\n  minHeight: '100%',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyCode() {\r\n  return (\r\n    <RootStyle title=\"Verify | Minimal UI\">\r\n      <LogoOnlyLayout />\r\n\r\n      <Container>\r\n        <Box sx={{ maxWidth: 480, mx: 'auto' }}>\r\n          <Button\r\n            size=\"small\"\r\n            component={RouterLink}\r\n            to={PATH_AUTH.login}\r\n            startIcon={<Icon icon={arrowIosBackFill} width={20} height={20} />}\r\n            sx={{ mb: 3 }}\r\n          >\r\n            Back\r\n          </Button>\r\n\r\n          <Typography variant=\"h3\" paragraph>\r\n            Please check your email!\r\n          </Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>\r\n            We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below box to verify your\r\n            email.\r\n          </Typography>\r\n\r\n          <Box sx={{ mt: 5, mb: 3 }}>\r\n            <VerifyCodeForm />\r\n          </Box>\r\n\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            Donâ€™t have a code? &nbsp;\r\n            <Link variant=\"subtitle2\" underline=\"none\" onClick={() => {}}>\r\n              Resend code\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}