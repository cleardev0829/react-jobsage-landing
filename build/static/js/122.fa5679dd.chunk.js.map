{"version":3,"sources":["components/map/controls/MapControlFullscreen.js","components/map/controls/MapControlGeolocate.js","components/map/controls/MapControlMarker.js","components/map/controls/MapControlNavigation.js","components/map/controls/MapControlPopup.js","components/map/controls/MapControlScale.js","components/map/map-heatmap/ControlPanel.js","components/map/map-heatmap/index.js"],"names":["FullscreenControlStyle","styled","FullscreenControl","theme","zIndex","borderRadius","overflow","top","spacing","left","boxShadow","customShadows","z8","transform","MapControlFullscreen","other","GeolocateControlStyle","GeolocateControl","MapControlGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","IconStyle","height","stroke","cursor","fill","palette","error","main","MapControlMarker","onClick","viewBox","d","NavigationControlStyle","NavigationControl","bottom","borderTop","divider","MapControlNavigation","PopupStyle","Popup","isRTL","direction","maxWidth","padding","z20","shape","backgroundColor","grey","width","fontSize","opacity","color","common","white","right","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","MapControlPopup","children","onClose","tipSize","anchor","closeButton","closeOnClick","RootStyle","position","border","lineHeight","backgroundImage","MapControlScale","sx","unit","minWidth","backdropFilter","WebkitBackdropFilter","alpha","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","days","Math","round","selectedDay","Box","display","alignItems","justifyContent","Typography","variant","Switch","size","checked","onChange","event","target","gutterBottom","fDate","Slider","min","step","max","disabled","value","daysToAdd","HEATMAP_LAYER","maxzoom","type","paint","MapHeatmap","useState","useAllDays","timeRange","setTimeRange","selectTime","earthquakes","setEarthQuakes","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","useEffect","fetch","then","resp","json","features","properties","time","length","data","useMemo","featureCollection","date","Date","year","getFullYear","month","getMonth","getDate","filter","feature","featureDate","filterFeaturesByDay","onViewportChange"],"mappings":"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","file":"static/js/122.fa5679dd.chunk.js","sourcesContent":["import { FullscreenControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst FullscreenControlStyle = styled(FullscreenControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  top: theme.spacing(1.5),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& span.mapboxgl-ctrl-icon': {\r\n    transform: ' scale(0.75)'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlFullscreen({ ...other }) {\r\n  return <FullscreenControlStyle {...other} />;\r\n}\r\n","import { GeolocateControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst GeolocateControlStyle = styled(GeolocateControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  top: theme.spacing(6),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlGeolocate({ ...other }) {\r\n  return <GeolocateControlStyle positionOptions={{ enableHighAccuracy: true }} trackUserLocation {...other} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Marker } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\nconst SIZE = 20;\r\n\r\nconst IconStyle = styled('svg')(({ theme }) => ({\r\n  height: SIZE,\r\n  stroke: 'none',\r\n  cursor: 'pointer',\r\n  fill: theme.palette.error.main,\r\n  transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlMarker.propTypes = {\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default function MapControlMarker({ onClick, ...other }) {\r\n  return (\r\n    <Marker {...other}>\r\n      <IconStyle viewBox=\"0 0 24 24\" onClick={onClick}>\r\n        <path d={ICON} />\r\n      </IconStyle>\r\n    </Marker>\r\n  );\r\n}\r\n","import { NavigationControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst NavigationControlStyle = styled(NavigationControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  bottom: theme.spacing(6),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& button+button': {\r\n    borderTop: `1px solid ${theme.palette.divider}`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlNavigation({ ...other }) {\r\n  return <NavigationControlStyle {...other} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Popup } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PopupStyle = styled(Popup)(({ theme }) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return {\r\n    '& .mapboxgl-popup-content': {\r\n      maxWidth: 180,\r\n      padding: theme.spacing(1),\r\n      boxShadow: theme.customShadows.z20,\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: theme.palette.grey[800]\r\n    },\r\n    '& .mapboxgl-popup-close-button': {\r\n      width: 24,\r\n      height: 24,\r\n      fontSize: 16,\r\n      opacity: 0.48,\r\n      color: theme.palette.common.white,\r\n      right: isRTL && '0',\r\n      left: isRTL && 'auto',\r\n      '&:hover': {\r\n        opacity: 1\r\n      },\r\n      '&:focus': {\r\n        outline: 'none'\r\n      }\r\n    },\r\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\r\n      marginBottom: -1,\r\n      borderBottomColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\r\n      marginLeft: -1,\r\n      borderLeftColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\r\n      marginTop: -1,\r\n      borderTopColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\r\n      marginRight: -1,\r\n      borderRightColor: theme.palette.grey[800]\r\n    }\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlPopup.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function MapControlPopup({ children, onClose, ...other }) {\r\n  return (\r\n    <PopupStyle tipSize={8} anchor=\"bottom\" onClose={onClose} closeButton closeOnClick={false} {...other}>\r\n      {children}\r\n    </PopupStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { ScaleControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  zIndex: 99,\r\n  position: 'absolute',\r\n  left: theme.spacing(1.5),\r\n  bottom: theme.spacing(3.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& .mapboxgl-ctrl': {\r\n    border: 'none',\r\n    borderRadius: 4,\r\n    lineHeight: '14px',\r\n    color: theme.palette.common.white,\r\n    backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlScale.propTypes = {\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function MapControlScale({ sx, ...other }) {\r\n  return (\r\n    <RootStyle sx={sx}>\r\n      <ScaleControl maxWidth={100} unit=\"imperial\" {...other} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Slider, Switch, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fDate } from '../../../utils/formatTime';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  zIndex: 99,\r\n  minWidth: 240,\r\n  position: 'absolute',\r\n  top: theme.spacing(1),\r\n  right: theme.spacing(1),\r\n  padding: theme.spacing(2),\r\n  backdropFilter: 'blur(8px)',\r\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.grey[900], 0.72)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nControlPanel.propTypes = {\r\n  startTime: PropTypes.number,\r\n  endTime: PropTypes.number,\r\n  allDays: PropTypes.bool,\r\n  selectedTime: PropTypes.number,\r\n  onChangeTime: PropTypes.func,\r\n  onChangeAllDays: PropTypes.func\r\n};\r\n\r\nexport default function ControlPanel({ startTime, endTime, allDays, selectedTime, onChangeTime, onChangeAllDays }) {\r\n  const day = 24 * 60 * 60 * 1000;\r\n  const days = Math.round((endTime - startTime) / day);\r\n  const selectedDay = Math.round((selectedTime - startTime) / day);\r\n\r\n  const handleChangeDays = (event) => {\r\n    const daysToAdd = event.target.value;\r\n    const newTime = startTime + daysToAdd * day;\r\n    onChangeTime(newTime);\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between'\r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\r\n          All Days\r\n        </Typography>\r\n        <Switch size=\"small\" checked={allDays} onChange={(event) => onChangeAllDays(event.target.checked)} />\r\n      </Box>\r\n      <br />\r\n      <Typography gutterBottom variant=\"body2\" sx={{ color: allDays ? 'text.disabled' : 'common.white' }}>\r\n        Each Day: {fDate(selectedTime)}\r\n      </Typography>\r\n      <Slider min={1} step={1} max={days} disabled={allDays} value={selectedDay} onChange={handleChangeDays} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import MapGL, { Source, Layer } from 'react-map-gl';\r\nimport { useEffect, useState, useMemo } from 'react';\r\n//\r\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../controls';\r\nimport ControlPanel from './ControlPanel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HEATMAP_LAYER = {\r\n  maxzoom: 9,\r\n  type: 'heatmap',\r\n  paint: {\r\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\r\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\r\n    'heatmap-color': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['heatmap-density'],\r\n      0,\r\n      'rgba(33,102,172,0)',\r\n      0.2,\r\n      'rgb(103,169,207)',\r\n      0.4,\r\n      'rgb(209,229,240)',\r\n      0.6,\r\n      'rgb(253,219,199)',\r\n      0.8,\r\n      'rgb(239,138,98)',\r\n      0.9,\r\n      'rgb(255,201,101)'\r\n    ],\r\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\r\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\r\n  }\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction filterFeaturesByDay(featureCollection, time) {\r\n  const date = new Date(time);\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth();\r\n  const day = date.getDate();\r\n  const features = featureCollection.features.filter((feature) => {\r\n    const featureDate = new Date(feature.properties.time);\r\n    return featureDate.getFullYear() === year && featureDate.getMonth() === month && featureDate.getDate() === day;\r\n  });\r\n  return { type: 'FeatureCollection', features };\r\n}\r\n\r\nexport default function MapHeatmap({ ...other }) {\r\n  const [allDays, useAllDays] = useState(true);\r\n  const [timeRange, setTimeRange] = useState([0, 0]);\r\n  const [selectedTime, selectTime] = useState(0);\r\n  const [earthquakes, setEarthQuakes] = useState(null);\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 40,\r\n    longitude: -100,\r\n    zoom: 3,\r\n    bearing: 0,\r\n    pitch: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const { features } = json;\r\n        const endTime = features[0].properties.time;\r\n        const startTime = features[features.length - 1].properties.time;\r\n\r\n        setTimeRange([startTime, endTime]);\r\n        setEarthQuakes(json);\r\n        selectTime(endTime);\r\n      });\r\n  }, []);\r\n\r\n  const data = useMemo(\r\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\r\n    [earthquakes, allDays, selectedTime]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\r\n        <MapControlScale />\r\n        <MapControlNavigation />\r\n        <MapControlFullscreen />\r\n        <MapControlGeolocate />\r\n\r\n        {data && (\r\n          <Source type=\"geojson\" data={data}>\r\n            <Layer {...HEATMAP_LAYER} />\r\n          </Source>\r\n        )}\r\n      </MapGL>\r\n\r\n      <ControlPanel\r\n        startTime={timeRange[0]}\r\n        endTime={timeRange[1]}\r\n        allDays={allDays}\r\n        selectedTime={selectedTime}\r\n        onChangeTime={selectTime}\r\n        onChangeAllDays={useAllDays}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}