{"version":3,"sources":["components/map/MapClusters.js"],"names":["clusterLayer","id","type","source","filter","paint","clusterCountLayer","layout","unclusteredPointLayer","MapClusters","other","mapRef","useRef","useState","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","onViewportChange","interactiveLayerIds","onClick","event","feature","features","clusterId","properties","cluster_id","current","getMap","getSource","getClusterExpansionZoom","err","geometry","coordinates","isNaN","transitionDuration","ref","data","cluster","clusterMaxZoom","clusterRadius"],"mappings":"+OAKMA,EAAe,CACnBC,GAAI,WACJC,KAAM,SACNC,OAAQ,cACRC,OAAQ,CAAC,MAAO,eAChBC,MAAO,CACL,eAAgB,CAAC,OAAQ,CAAC,MAAO,eAAgB,UAAW,IAAK,UAAW,IAAK,WACjF,gBAAiB,CAAC,OAAQ,CAAC,MAAO,eAAgB,GAAI,IAAK,GAAI,IAAK,MAIlEC,EAAoB,CACxBL,GAAI,gBACJC,KAAM,SACNC,OAAQ,cACRC,OAAQ,CAAC,MAAO,eAChBG,OAAQ,CACN,aAAc,4BACd,YAAa,CAAC,sBAAuB,yBACrC,YAAa,KAIXC,EAAwB,CAC5BP,GAAI,oBACJC,KAAM,SACNC,OAAQ,cACRC,OAAQ,CAAC,IAAK,CAAC,MAAO,gBACtBC,MAAO,CACL,eAAgB,UAChB,gBAAiB,EACjB,sBAAuB,EACvB,sBAAuB,SAMZ,SAASI,EAAT,GAAoC,IAAVC,EAAS,oBAC1CC,EAASC,iBAAO,MACtB,EAAgCC,mBAAS,CACvCC,SAAU,MACVC,WAAY,OACZC,KAAM,EACNC,QAAS,EACTC,MAAO,IALT,mBAAOC,EAAP,KAAiBC,EAAjB,KA4BA,OACE,mCACE,cAAC,IAAD,uCACMD,GADN,IAEEE,iBAAkBD,EAClBE,oBAAqB,CAACtB,EAAaC,IACnCsB,QA1BU,SAACC,GACf,IAAMC,EAAUD,EAAME,SAAS,GACzBC,EAAYF,GAAWA,EAAQG,WAAWC,WAC3BlB,EAAOmB,QAAQC,SAASC,UAAU,eAE1CC,wBAAwBN,GAAW,SAACO,EAAKlB,GAChDkB,GAGJd,EAAY,2BACPD,GADM,IAETJ,UAAWU,GAAWA,EAAQU,SAASC,YAAY,GACnDtB,SAAUW,GAAWA,EAAQU,SAASC,YAAY,GAElDpB,KAAMqB,MAAMrB,GAAQ,EAAIA,EACxBsB,mBAAoB,WAYpBC,IAAK5B,GACDD,GANN,aAQE,eAAC,IAAD,CACET,GAAG,cACHC,KAAK,UACLsC,KAAK,kEACLC,SAAO,EACPC,eAAgB,GAChBC,cAAe,GANjB,UAQE,cAAC,IAAD,eAAW3C,IACX,cAAC,IAAD,eAAWM,IACX,cAAC,IAAD,eAAWE","file":"static/js/128.eb653efa.chunk.js","sourcesContent":["import { useState, useRef } from 'react';\r\nimport MapGL, { Source, Layer } from 'react-map-gl';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst clusterLayer = {\r\n  id: 'clusters',\r\n  type: 'circle',\r\n  source: 'earthquakes',\r\n  filter: ['has', 'point_count'],\r\n  paint: {\r\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\r\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40]\r\n  }\r\n};\r\n\r\nconst clusterCountLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'earthquakes',\r\n  filter: ['has', 'point_count'],\r\n  layout: {\r\n    'text-field': '{point_count_abbreviated}',\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': 12\r\n  }\r\n};\r\n\r\nconst unclusteredPointLayer = {\r\n  id: 'unclustered-point',\r\n  type: 'circle',\r\n  source: 'earthquakes',\r\n  filter: ['!', ['has', 'point_count']],\r\n  paint: {\r\n    'circle-color': '#11b4da',\r\n    'circle-radius': 4,\r\n    'circle-stroke-width': 1,\r\n    'circle-stroke-color': '#fff'\r\n  }\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapClusters({ ...other }) {\r\n  const mapRef = useRef(null);\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 40.67,\r\n    longitude: -103.59,\r\n    zoom: 3,\r\n    bearing: 0,\r\n    pitch: 0\r\n  });\r\n\r\n  const onClick = (event) => {\r\n    const feature = event.features[0];\r\n    const clusterId = feature && feature.properties.cluster_id;\r\n    const mapboxSource = mapRef.current.getMap().getSource('earthquakes');\r\n\r\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      setViewport({\r\n        ...viewport,\r\n        longitude: feature && feature.geometry.coordinates[0],\r\n        latitude: feature && feature.geometry.coordinates[1],\r\n        // eslint-disable-next-line no-restricted-globals\r\n        zoom: isNaN(zoom) ? 3 : zoom,\r\n        transitionDuration: 500\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MapGL\r\n        {...viewport}\r\n        onViewportChange={setViewport}\r\n        interactiveLayerIds={[clusterLayer.id]}\r\n        onClick={onClick}\r\n        ref={mapRef}\r\n        {...other}\r\n      >\r\n        <Source\r\n          id=\"earthquakes\"\r\n          type=\"geojson\"\r\n          data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\r\n          cluster\r\n          clusterMaxZoom={14}\r\n          clusterRadius={50}\r\n        >\r\n          <Layer {...clusterLayer} />\r\n          <Layer {...clusterCountLayer} />\r\n          <Layer {...unclusteredPointLayer} />\r\n        </Source>\r\n      </MapGL>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}