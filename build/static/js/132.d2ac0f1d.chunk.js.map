{"version":3,"sources":["components/authentication/demo/DemoForm.js","components/authentication/demo/DemoContent.js","pages/authentication/Demo.js"],"names":["RegisterForm","register","useAuth","isMountedRef","useIsMountedRef","useSnackbar","enqueueSnackbar","closeSnackbar","useState","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","phone","companyName","jobTitle","country","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","contry","variant","action","key","size","onClick","icon","closeFill","current","console","error","afterSubmit","message","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","direction","xs","sm","TextField","fullWidth","label","Boolean","helperText","type","select","language","variants","varFadeInUp","Typography","sx","color","FormControlLabel","control","Checkbox","checked","remember","LoadingButton","loading","RootStyle","styled","theme","padding","backgroundImage","palette","mode","alpha","grey","ContentStyle","width","textAlign","marginBottom","breakpoints","up","DemoContent","props","title","prefix","suffix","description","buttonTitle","imageUrl","useTheme","Container","maxWidth","Grid","container","justifyContent","item","md","display","alignItems","pr","Divider","my","dir","pl","Box","alt","src","Page","height","overflow","position","backgroundColor","background","default","data","Demo","id"],"mappings":"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","file":"static/js/132.d2ac0f1d.chunk.js","sourcesContent":["import * as Yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useFormik, Form, FormikProvider } from \"formik\";\r\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\r\nimport closeFill from \"@iconify/icons-eva/close-fill\";\r\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\";\r\n// material\r\nimport {\r\n  Stack,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Alert,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { LoadingButton } from \"@material-ui/lab\";\r\n// hooks\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useIsMountedRef from \"../../../hooks/useIsMountedRef\";\r\n//\r\nimport { MIconButton } from \"../../@material-extend\";\r\nimport { varFadeInUp, MotionInView } from \"../../animate\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function RegisterForm() {\r\n  const { register } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"First name required\"),\r\n    lastName: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Last name required\"),\r\n    email: Yup.string()\r\n      .email(\"Email must be a valid email address\")\r\n      .required(\"Email is required\"),\r\n    phone: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .required(\"Phone number is required\"),\r\n    companyName: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .required(\"Company name is required\"),\r\n    jobTitle: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .required(\"Job title is required\"),\r\n    country: Yup.string().min(2, \"Too Short!\").required(\"Country is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      companyName: \"\",\r\n      jobTitle: \"\",\r\n      country: \"\",\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        await register(\r\n          values.firstName,\r\n          values.lastName,\r\n          values.email,\r\n          values.phone,\r\n          values.companyName,\r\n          values.jobTitle,\r\n          values.contry\r\n        );\r\n        enqueueSnackbar(\"Register success\", {\r\n          variant: \"success\",\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          ),\r\n        });\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (isMountedRef.current) {\r\n          setErrors({ afterSubmit: error.message });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  const { errors, touched, values, handleSubmit, isSubmitting, getFieldProps } =\r\n    formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          {errors.afterSubmit && (\r\n            <Alert severity=\"error\">{errors.afterSubmit}</Alert>\r\n          )}\r\n\r\n          <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"First Name\"\r\n              {...getFieldProps(\"firstName\")}\r\n              error={Boolean(touched.firstName && errors.firstName)}\r\n              helperText={touched.firstName && errors.firstName}\r\n              required\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Last Name\"\r\n              {...getFieldProps(\"lastName\")}\r\n              error={Boolean(touched.lastName && errors.lastName)}\r\n              helperText={touched.lastName && errors.lastName}\r\n              required\r\n            />\r\n          </Stack>\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            type=\"email\"\r\n            label=\"Email address\"\r\n            {...getFieldProps(\"email\")}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n            required\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"phone\"\r\n            type=\"phone\"\r\n            label=\"Phone Number\"\r\n            {...getFieldProps(\"phone\")}\r\n            error={Boolean(touched.phone && errors.phone)}\r\n            helperText={touched.phone && errors.phone}\r\n            required\r\n          />\r\n\r\n          <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Company Name\"\r\n              {...getFieldProps(\"companyName\")}\r\n              error={Boolean(touched.companyName && errors.companyName)}\r\n              helperText={touched.companyName && errors.companyName}\r\n              required\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Job Title\"\r\n              {...getFieldProps(\"jobTitle\")}\r\n              error={Boolean(touched.jobTitle && errors.jobTitle)}\r\n              helperText={touched.jobTitle && errors.jobTitle}\r\n              required\r\n            />\r\n          </Stack>\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Country\"\r\n            {...getFieldProps(\"country\")}\r\n            error={Boolean(touched.country && errors.country)}\r\n            helperText={touched.country && errors.country}\r\n            required\r\n            select\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Preferred Language\"\r\n            {...getFieldProps(\"language\")}\r\n            error={Boolean(touched.language && errors.language)}\r\n            helperText={touched.language && errors.language}\r\n            required\r\n            select\r\n          />\r\n\r\n          <MotionInView variants={varFadeInUp}>\r\n            <Typography\r\n              // variant=\"subtitle1\"\r\n              sx={{\r\n                color: \"text.secondary\",\r\n              }}\r\n            >\r\n              Through this form IRekommend collects your name and email. Check\r\n              out our privacy policy for the full story on how we protect and\r\n              manage your submitted data.\r\n            </Typography>\r\n          </MotionInView>\r\n\r\n          <MotionInView variants={varFadeInUp}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  {...getFieldProps(\"remember\")}\r\n                  checked={values.remember}\r\n                />\r\n              }\r\n              label=\"Please subscribe me to the IRekommend newsletter\"\r\n            />\r\n          </MotionInView>\r\n\r\n          <LoadingButton\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            loading={isSubmitting}\r\n          >\r\n            Request Demo\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import {\r\n  alpha,\r\n  useTheme,\r\n  experimentalStyled as styled,\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Divider,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\nimport { varFadeInUp, MotionInView } from \"../../animate\";\r\nimport { MHidden } from \"../../@material-extend\";\r\nimport { DemoForm } from \".\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(24, 0),\r\n  backgroundImage:\r\n    theme.palette.mode === \"light\"\r\n      ? `linear-gradient(180deg, ${alpha(theme.palette.grey[300], 0)} 0%, ${\r\n          theme.palette.grey[300]\r\n        } 100%)`\r\n      : \"none\",\r\n}));\r\n\r\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  textAlign: \"center\",\r\n  marginBottom: theme.spacing(10),\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    textAlign: \"left\",\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction IconBullet({ type = \"item\" }) {\r\n  return (\r\n    <Box sx={{ width: 24, height: 16, display: \"flex\", alignItems: \"center\" }}>\r\n      <Box\r\n        component=\"span\"\r\n        sx={{\r\n          ml: \"2px\",\r\n          width: 4,\r\n          height: 4,\r\n          borderRadius: \"50%\",\r\n          bgcolor: \"currentColor\",\r\n          ...(type !== \"item\" && {\r\n            ml: 0,\r\n            width: 8,\r\n            height: 2,\r\n            borderRadius: 2,\r\n          }),\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function DemoContent(props) {\r\n  const {\r\n    title,\r\n    prefix,\r\n    suffix,\r\n    description,\r\n    buttonTitle,\r\n    imageUrl,\r\n    direction,\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === \"light\";\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"lg\">        \r\n        <Grid container spacing={5} justifyContent=\"center\">          \r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            sx={{ display: \"flex\", alignItems: \"center\", pr: 10 }}\r\n          >\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h3\">\r\n                  IRekommend provides knowledge to everyone\r\n                </Typography>\r\n                <MHidden width=\"mdDown\">\r\n                  <Divider color=\"primary\" sx={{ width: 70, my: 4 }} />\r\n                </MHidden>\r\n              </MotionInView>\r\n\r\n              <DemoForm />\r\n            </ContentStyle>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} dir=\"ltr\" sx={{pl: 10}}>\r\n            <Box>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <img alt={`screen`} src=\"/static/demo/book-store.svg\" />\r\n              </MotionInView>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","// material\r\nimport { experimentalStyled as styled } from \"@material-ui/core/styles\";\r\n// components\r\nimport Page from \"../../components/Page\";\r\nimport { DemoContent } from \"src/components/authentication/demo\"; \r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)({\r\n  height: \"100%\",\r\n});\r\n\r\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\r\n  overflow: \"hidden\",\r\n  position: \"relative\",\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst data = {\r\n  reimagine: {\r\n    prefix: \"Reimagine\",\r\n    suffix: \"Recruitement\",\r\n    description: [\r\n      {\r\n        suffix:\r\n          \"IRekommend is an end-to-end recruitment solution which reimagines the way you recruit Right side Pic : Use Manatal Pic with a variation\",\r\n      },\r\n    ],\r\n    buttonTitle: \"Start your free trial\",\r\n    imageUrl: \"/static/home/pc1.svg\",\r\n    direction: true,\r\n  },\r\n  our: {\r\n    prefix: \"Our\",\r\n    suffix: \"skill suit include\",\r\n    description: [\r\n      {\r\n        prefix: \"Intelligent Hiring\",\r\n        suffix:\r\n          \"Hire through thousands of candidates wisely brought through our high-powered AI With our AI Powered Matching engine You will never fail to get quality candidates with automated resume matching.\",\r\n      },\r\n    ],\r\n    imageUrl: \"/static/home/pc3.svg\",\r\n    direction: false,\r\n  },\r\n  candidate: {\r\n    prefix: \"Candidate\",\r\n    suffix: \"Engagement\",\r\n    description: [\r\n      {\r\n        suffix: \"Use our AI Chatbots to upgrade your candidate screening & engagements, use bulk emailing to Schedule & Reschedule your interviews.\"\r\n      }\r\n    ],\r\n    imageUrl: \"/static/home/pc3.svg\",\r\n    direction: true,\r\n  },\r\n  resume: {\r\n    prefix: \"Resume\",\r\n    suffix: \"Parsing\",\r\n    description: [\r\n      {\r\n        suffix: \"Use our resume parser to extract candidate persona With our deep learning module you can extract complex personas in no time\"\r\n      }\r\n    ],      \r\n    imageUrl: \"/static/home/pc3.svg\",\r\n    direction: false,\r\n  },\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RootStyle title=\"This is JobSage landing page | Minimal-UI\" id=\"move_top\">\r\n      <ContentStyle>\r\n        <DemoContent {...data.reimagine} />\r\n      </ContentStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}